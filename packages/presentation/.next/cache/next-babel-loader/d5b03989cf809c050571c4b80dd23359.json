{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/topic/[topicId].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { Pages } from 'models';\n\nvar Topic = function Topic() {\n  _s();\n\n  var router = useRouter();\n  var topicId = router.query.topicId;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      user: user,\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"main\", {\n      \"data-testid\": \"topic-page\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 2,\n        className: styles.list,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            className: styles.title,\n            children: topicName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(NewCardForm, {\n            onAdd: /*#__PURE__*/function () {\n              var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(question, answer) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return addCard({\n                          question: question,\n                          answer: answer\n                        }, topicId, user.uid);\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2) {\n                return _ref.apply(this, arguments);\n              };\n            }()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            spacing: 2,\n            children: cards.map(function (card) {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(FlashCard, {\n                  front: card.question,\n                  containerClassName: styles.flashCard,\n                  onRemove: function onRemove() {\n                    return cardRemoveHandler(card);\n                  },\n                  children: card.answer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 19\n                }, _this)\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Topic, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Topic;\nTopic.displayName = Pages.Topic;\nexport default Topic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topic\");","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/topic/[topicId].tsx"],"names":["useRouter","Pages","Topic","router","topicId","query","user","logout","styles","list","title","topicName","question","answer","addCard","uid","cards","map","card","flashCard","cardRemoveHandler","id","displayName"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,SAASC,KAAT,QAAsB,QAAtB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADkB,MAEVI,OAFU,GAEED,MAAM,CAACE,KAFT,CAEVD,OAFU;AAIlB,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEE,IAAd;AAAoB,MAAA,MAAM,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAM,qBAAY,YAAlB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,OAAO,EAAE,CAA5C;AAA+C,QAAA,SAAS,EAAEC,MAAM,CAACC,IAAjE;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAED,MAAM,CAACE,KAA3C;AAAA,sBACGC;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,eAME,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,KAAK;AAAA,kFAAE,iBAAOC,QAAP,EAAiBC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACCC,OAAO,CAAC;AAAEF,0BAAAA,QAAQ,EAARA,QAAF;AAAYC,0BAAAA,MAAM,EAANA;AAAZ,yBAAD,EAAuBT,OAAvB,EAAgCE,IAAI,CAACS,GAArC,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAF;;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBANF,eAaE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,SAAS,EAAC,KAA1B;AAAgC,YAAA,OAAO,EAAE,CAAzC;AAAA,sBACGC,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,kCACb,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAyB,gBAAA,EAAE,EAAE,EAA7B;AAAiC,gBAAA,EAAE,EAAE,CAArC;AAAwC,gBAAA,EAAE,EAAE,CAA5C;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAEA,IAAI,CAACN,QADd;AAEE,kBAAA,kBAAkB,EAAEJ,MAAM,CAACW,SAF7B;AAGE,kBAAA,QAAQ,EAAE;AAAA,2BAAMC,iBAAiB,CAACF,IAAD,CAAvB;AAAA,mBAHZ;AAAA,4BAKGA,IAAI,CAACL;AALR;AAAA;AAAA;AAAA;AAAA;AADF,iBAAgBK,IAAI,CAACG,EAArB;AAAA;AAAA;AAAA;AAAA,uBADa;AAAA,aAAd;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAoCD,CAxCD;;GAAMnB,K;UACWF,S;;;KADXE,K;AA0CNA,KAAK,CAACoB,WAAN,GAAoBrB,KAAK,CAACC,KAA1B;AAEA,eAAeA,KAAf","sourcesContent":["import { useRouter } from 'next/router'\n\nimport { Pages } from 'models'\n\nconst Topic = () => {\n  const router = useRouter()\n  const { topicId } = router.query\n\n  return (\n    <>\n      <Header user={user} logout={logout} />\n      <main data-testid=\"topic-page\">\n        <Grid container direction=\"column\" spacing={2} className={styles.list}>\n          <Grid item>\n            <Typography variant=\"h1\" className={styles.title}>\n              {topicName}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <NewCardForm\n              onAdd={async (question, answer) => {\n                await addCard({ question, answer }, topicId, user.uid)\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <Grid container direction=\"row\" spacing={2}>\n              {cards.map(card => (\n                <Grid item key={card.id} xs={12} sm={6} md={3}>\n                  <FlashCard\n                    front={card.question}\n                    containerClassName={styles.flashCard}\n                    onRemove={() => cardRemoveHandler(card)}\n                  >\n                    {card.answer}\n                  </FlashCard>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </main>\n    </>\n  )\n}\n\nTopic.displayName = Pages.Topic\n\nexport default Topic\n"]},"metadata":{},"sourceType":"module"}