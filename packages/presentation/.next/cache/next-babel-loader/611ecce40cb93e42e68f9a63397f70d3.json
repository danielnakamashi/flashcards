{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/home/Home.tsx\";\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from 'contexts/auth';\nimport { Pages } from 'models';\nimport { Header } from 'components/Header';\nimport { NewTopicForm } from 'components/NewTopicForm';\nimport { TopicsList } from 'components/TopicsList';\nimport { useStyles } from './Home.styles';\n\nfunction Home({\n  getTopics,\n  addTopic\n}) {\n  const router = useRouter();\n  const {\n    user,\n    loading,\n    getToken\n  } = useAuth();\n  const styles = useStyles();\n  const {\n    0: topics,\n    1: setTopics\n  } = useState([]);\n  useEffect(() => {\n    let isMounted = true;\n\n    (async () => {\n      const token = await getToken();\n\n      if (token) {\n        const topics = await getTopics({\n          token\n        });\n\n        if (isMounted) {\n          setTopics(topics);\n        }\n      }\n    })();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(NewTopicForm, {\n          onTopicSubmitted: ({\n            name\n          }) => addTopic(user.token, {\n            name\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TopicsList, {\n          items: topics,\n          onItemRemoved: topicId => {// removeTopic(user.uid, topicId)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nHome.displayName = Pages.Home;\nexport { Home };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/home/Home.tsx"],"names":["useState","useEffect","useRouter","Grid","useAuth","Pages","Header","NewTopicForm","TopicsList","useStyles","Home","getTopics","addTopic","router","user","loading","getToken","styles","topics","setTopics","isMounted","token","container","name","topicId","displayName"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAGA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,SAASC,SAAT,QAA0B,eAA1B;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAd,EAAmG;AACjG,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA8BZ,OAAO,EAA3C;AACA,QAAMa,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAA,OAACS,MAAD;AAAA,OAASC;AAAT,MAAsBnB,QAAQ,CAAU,EAAV,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,SAAS,GAAG,IAAhB;;AACC,KAAC,YAAY;AACZ,YAAMC,KAAK,GAAG,MAAML,QAAQ,EAA5B;;AACA,UAAIK,KAAJ,EAAW;AACT,cAAMH,MAAM,GAAG,MAAMP,SAAS,CAAC;AAAEU,UAAAA;AAAF,SAAD,CAA9B;;AACA,YAAID,SAAJ,EAAe;AACbD,UAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AACF;AACF,KARA;;AAUD,WAAO,MAAM;AACXE,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GAfQ,EAeN,CAACN,IAAD,CAfM,CAAT;AAiBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,QAA1B;AAAmC,MAAA,SAAS,EAAEG,MAAM,CAACK,SAArD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,gBAAgB,EAAE,CAAC;AAAEC,YAAAA;AAAF,WAAD,KAAcX,QAAQ,CAACE,IAAI,CAACO,KAAN,EAAa;AAAEE,YAAAA;AAAF,WAAb;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAEL,MADT;AAEE,UAAA,aAAa,EAAGM,OAAD,IAAqB,CAClC;AACD;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkBD;;AAEDd,IAAI,CAACe,WAAL,GAAmBpB,KAAK,CAACK,IAAzB;AAEA,SAASA,IAAT","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Grid from '@material-ui/core/Grid'\nimport { GetTopicsUseCase, AddTopicUseCase } from '@flashcards/client'\nimport { Topic } from '@flashcards/core'\nimport { useAuth } from 'contexts/auth'\nimport { Pages } from 'models'\nimport { Header } from 'components/Header'\nimport { NewTopicForm } from 'components/NewTopicForm'\nimport { TopicsList } from 'components/TopicsList'\nimport { Routes } from 'models/Routes'\nimport { useStyles } from './Home.styles'\n\nfunction Home({ getTopics, addTopic }: { getTopics: GetTopicsUseCase; addTopic: AddTopicUseCase }) {\n  const router = useRouter()\n  const { user, loading, getToken } = useAuth()\n  const styles = useStyles()\n  const [topics, setTopics] = useState<Topic[]>([])\n\n  useEffect(() => {\n    let isMounted = true\n    ;(async () => {\n      const token = await getToken()\n      if (token) {\n        const topics = await getTopics({ token })\n        if (isMounted) {\n          setTopics(topics)\n        }\n      }\n    })()\n\n    return () => {\n      isMounted = false\n    }\n  }, [user])\n\n  return (\n    <>\n      <Header />\n      <Grid container direction=\"column\" className={styles.container}>\n        <Grid item>\n          <NewTopicForm onTopicSubmitted={({ name }) => addTopic(user.token, { name })} />\n        </Grid>\n        <Grid item>\n          <TopicsList\n            items={topics}\n            onItemRemoved={(topicId: string) => {\n              // removeTopic(user.uid, topicId)\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nHome.displayName = Pages.Home\n\nexport { Home }\n"]},"metadata":{},"sourceType":"module"}