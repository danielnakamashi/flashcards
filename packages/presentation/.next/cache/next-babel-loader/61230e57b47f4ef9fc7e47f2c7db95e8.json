{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/login/Login.tsx\";\nimport * as React from 'react';\nimport { Pages } from '../../models';\nimport { LoginProvidersData } from '@flashcards/client';\n\nfunction Login({\n  loginWithProvider\n}) {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), Object.keys(LoginProvidersData).map(provider => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        loginWithProvider(provider);\n      },\n      children: provider\n    }, provider, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\nLogin.displayName = Pages.Login;\nexport { Login };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/login/Login.tsx"],"names":["React","Pages","LoginProvidersData","Login","loginWithProvider","Object","keys","map","provider","displayName"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACEC,kBADF,QAGO,oBAHP;;AASA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA6C;AAC3C,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,MAAM,CAACC,IAAP,CAAYJ,kBAAZ,EAAgCK,GAAhC,CAAoCC,QAAQ,iBAC3C;AAEE,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,iBAAiB,CAACI,QAAD,CAAjB;AACD,OAJH;AAAA,gBAMGA;AANH,OACOA,QADP;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;AAEDL,KAAK,CAACM,WAAN,GAAoBR,KAAK,CAACE,KAA1B;AAEA,SAASA,KAAT","sourcesContent":["import * as React from 'react'\nimport { Pages } from '../../models'\nimport {\n  LoginProvidersData,\n  LoginWithProviderUseCase,\n} from '@flashcards/client'\n\ntype Props = {\n  loginWithProvider: LoginWithProviderUseCase\n}\n\nfunction Login({ loginWithProvider }: Props) {\n  return (\n    <main>\n      <h1>Login</h1>\n      {Object.keys(LoginProvidersData).map(provider => (\n        <button\n          key={provider}\n          onClick={() => {\n            loginWithProvider(provider as LoginProvidersData)\n          }}\n        >\n          {provider}\n        </button>\n      ))}\n    </main>\n  )\n}\n\nLogin.displayName = Pages.Login\n\nexport { Login }\n"]},"metadata":{},"sourceType":"module"}