{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Card } from '@flashcards/core';\n\nvar UseCases = /*#__PURE__*/function () {\n  function UseCases(firebaseService, graphqlService) {\n    _classCallCheck(this, UseCases);\n\n    _defineProperty(this, \"firebaseService\", void 0);\n\n    _defineProperty(this, \"graphqlService\", void 0);\n\n    this.firebaseService = firebaseService;\n    this.graphqlService = graphqlService;\n  }\n\n  _createClass(UseCases, [{\n    key: \"addCard\",\n    value: function () {\n      var _addCard = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token, input) {\n        var cardData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.graphqlService.addCard(token, input);\n\n              case 2:\n                cardData = _context.sent;\n                return _context.abrupt(\"return\", new Card(cardData));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addCard(_x, _x2) {\n        return _addCard.apply(this, arguments);\n      }\n\n      return addCard;\n    }()\n  }]);\n\n  return UseCases;\n}();\n\nexport { UseCases };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/node_modules/@flashcards/client/src/usecase/index.ts"],"names":["Card","UseCases","firebaseService","graphqlService","token","input","addCard","cardData"],"mappings":";;;;;AAAA,SAASA,IAAT,QAAqB,kBAArB;;IAKMC,Q;AAIJ,oBAAYC,eAAZ,EAA8CC,cAA9C,EAA8E;AAAA;;AAAA;;AAAA;;AAC5E,SAAKD,eAAL,GAAuBA,eAAvB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACD;;;;;+FAEaC,K,EAAeC,K;;;;;;;uBACJ,KAAKF,cAAL,CAAoBG,OAApB,CAA4BF,KAA5B,EAAmCC,KAAnC,C;;;AAAjBE,gBAAAA,Q;iDACC,IAAIP,IAAJ,CAASO,QAAT,C;;;;;;;;;;;;;;;;;;;;;AAIX,SAASN,QAAT","sourcesContent":["import { Card } from '@flashcards/core'\nimport { FirebaseService } from '../service/firebase/service'\nimport { GraphqlService } from '../service/graphql/service'\nimport { AddCardInput, AddCardUseCase } from './AddCard'\n\nclass UseCases implements AddCardUseCase {\n  private readonly firebaseService: FirebaseService\n  private readonly graphqlService: GraphqlService\n\n  constructor(firebaseService: FirebaseService, graphqlService: GraphqlService) {\n    this.firebaseService = firebaseService\n    this.graphqlService = graphqlService\n  }\n\n  async addCard(token: string, input: AddCardInput): Promise<Card> {\n    const cardData = await this.graphqlService.addCard(token, input)\n    return new Card(cardData)\n  }\n}\n\nexport { UseCases }\n"]},"metadata":{},"sourceType":"module"}