{"ast":null,"code":"var _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/home/Home.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from 'contexts/auth';\nimport { Pages } from 'models';\nimport { Header } from 'components/Header';\nimport { NewTopicForm } from 'components/NewTopicForm';\nimport { TopicsList } from 'components/TopicsList';\nimport { useUseCases } from 'hooks/useUseCases';\nimport { useStyles } from './Home.styles';\nimport { withAuth } from 'hocs/withAuth';\nimport { withRedirectToLogin } from 'hocs/withRedirectToLogin';\n\nconst Home = () => {\n  const {\n    user,\n    getToken\n  } = useAuth();\n  const styles = useStyles();\n  const {\n    0: topics,\n    1: setTopics\n  } = useState([]);\n  const {\n    0: token,\n    1: setToken\n  } = useState('');\n  const {\n    getTopicsObserver,\n    addTopic,\n    removeTopic\n  } = useUseCases();\n  useEffect(() => {\n    let isMounted = true;\n\n    (async () => {\n      const token = await getToken();\n\n      if (token && isMounted) {\n        setToken(token);\n      }\n    })();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [user]);\n  useEffect(() => {\n    let isMounted = true;\n\n    if (token) {\n      const unsubscribe = getTopicsObserver(token).subscribe(topics => {\n        if (isMounted) {\n          setTopics(topics);\n        }\n      });\n      return () => {\n        isMounted = false;\n        unsubscribe();\n      };\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [token]);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(NewTopicForm, {\n    onTopicSubmitted: async ({\n      name\n    }) => {\n      addTopic(token, {\n        name\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(TopicsList, {\n    items: topics,\n    onItemRemoved: async topicId => {\n      removeTopic(token, topicId);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))));\n};\n\nHome.displayName = Pages.Home;\nconst HomeDecorated = withAuth(withRedirectToLogin(Home));\nexport { HomeDecorated as Home };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/home/Home.tsx"],"names":["useState","useEffect","Grid","useAuth","Pages","Header","NewTopicForm","TopicsList","useUseCases","useStyles","withAuth","withRedirectToLogin","Home","user","getToken","styles","topics","setTopics","token","setToken","getTopicsObserver","addTopic","removeTopic","isMounted","unsubscribe","subscribe","container","name","topicId","displayName","HomeDecorated"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { Topic } from '@flashcards/core'\nimport { useAuth } from 'contexts/auth'\nimport { Pages } from 'models'\nimport { Header } from 'components/Header'\nimport { NewTopicForm } from 'components/NewTopicForm'\nimport { TopicsList } from 'components/TopicsList'\nimport { useUseCases } from 'hooks/useUseCases'\nimport { useStyles } from './Home.styles'\nimport { withAuth } from 'hocs/withAuth'\nimport { withRedirectToLogin } from 'hocs/withRedirectToLogin'\n\nconst Home = () => {\n  const { user, getToken } = useAuth()\n  const styles = useStyles()\n  const [topics, setTopics] = useState<Topic[]>([])\n  const [token, setToken] = useState<string>('')\n  const { getTopicsObserver, addTopic, removeTopic } = useUseCases()\n\n  useEffect(() => {\n    let isMounted = true\n    ;(async () => {\n      const token = await getToken()\n      if (token && isMounted) {\n        setToken(token)\n      }\n    })()\n\n    return () => {\n      isMounted = false\n    }\n  }, [user])\n\n  useEffect(() => {\n    let isMounted = true\n\n    if (token) {\n      const unsubscribe = getTopicsObserver(token).subscribe(topics => {\n        if (isMounted) {\n          setTopics(topics)\n        }\n      })\n\n      return () => {\n        isMounted = false\n        unsubscribe()\n      }\n    }\n\n    return () => {\n      isMounted = false\n    }\n  }, [token])\n\n  return (\n    <>\n      <Header />\n      <Grid container direction=\"column\" className={styles.container}>\n        <Grid item>\n          <NewTopicForm\n            onTopicSubmitted={async ({ name }) => {\n              addTopic(token, { name })\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <TopicsList\n            items={topics}\n            onItemRemoved={async (topicId: string) => {\n              removeTopic(token, topicId)\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nHome.displayName = Pages.Home\n\nconst HomeDecorated = withAuth(withRedirectToLogin(Home))\n\nexport { HomeDecorated as Home }\n"]},"metadata":{},"sourceType":"module"}