{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/contexts/auth.tsx\";\nimport * as React from 'react';\nimport { factory } from '@flashcards/client';\nconst userObserver = factory.createUserObserver();\nconst AuthContext = /*#__PURE__*/React.createContext(null);\n\nconst useAuth = () => {\n  return React.useContext(AuthContext);\n};\n\nconst initialState = {\n  user: null,\n  loading: true\n};\n\nfunction reducer(state, action) {\n  if (action.type === 'loaded') {\n    return {\n      loading: false,\n      user: action.payload\n    };\n  }\n\n  return state;\n}\n\nconst AuthProvider = ({\n  children\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  React.useEffect(() => {\n    userObserver(user => {\n      dispatch({\n        type: 'loaded',\n        payload: user\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: state,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/contexts/auth.tsx"],"names":["React","factory","userObserver","createUserObserver","AuthContext","createContext","useAuth","useContext","initialState","user","loading","reducer","state","action","type","payload","AuthProvider","children","dispatch","useReducer","useEffect"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AASA,MAAMC,YAAY,GAAGD,OAAO,CAACE,kBAAR,EAArB;AACA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,CAA2B,IAA3B,CAApB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,SAAON,KAAK,CAACO,UAAN,CAAiBH,WAAjB,CAAP;AACD,CAFD;;AAIA,MAAMI,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,OAAO,EAAE;AAAvB,CAArB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAA+BC,MAA/B,EAAsD;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLJ,MAAAA,OAAO,EAAE,KADJ;AAELD,MAAAA,IAAI,EAAEI,MAAM,CAACE;AAFR,KAAP;AAID;;AAED,SAAOH,KAAP;AACD;;AAED,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBlB,KAAK,CAACmB,UAAN,CAAiBR,OAAjB,EAA0BH,YAA1B,CAA1B;AAEAR,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpBlB,IAAAA,YAAY,CAACO,IAAI,IAAI;AACnBS,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,OAAO,EAAEN;AAA3B,OAAD,CAAR;AACD,KAFW,CAAZ;AAGD,GAJD,EAIG,EAJH;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,KAA7B;AAAA,cAAqCK;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAVD;;AAYA,SAASD,YAAT,EAAuBV,OAAvB","sourcesContent":["import * as React from 'react'\nimport type { UserData } from '@flashcards/client'\nimport { factory } from '@flashcards/client'\n\ntype State = {\n  user: UserData | null\n  loading: boolean\n}\n\ntype Action = { type: 'loaded'; payload: UserData | null }\n\nconst userObserver = factory.createUserObserver()\nconst AuthContext = React.createContext<State>(null)\n\nconst useAuth = () => {\n  return React.useContext(AuthContext)\n}\n\nconst initialState = { user: null, loading: true }\n\nfunction reducer(state: State, action: Action): State {\n  if (action.type === 'loaded') {\n    return {\n      loading: false,\n      user: action.payload,\n    }\n  }\n\n  return state\n}\n\nconst AuthProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n\n  React.useEffect(() => {\n    userObserver(user => {\n      dispatch({ type: 'loaded', payload: user })\n    })\n  }, [])\n\n  return <AuthContext.Provider value={state}>{children}</AuthContext.Provider>\n}\n\nexport { AuthProvider, useAuth }\n"]},"metadata":{},"sourceType":"module"}