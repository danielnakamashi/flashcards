{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from 'contexts/auth';\nimport { Pages } from 'models';\nimport { Header } from 'components/Header';\nimport { NewTopicForm } from 'components/NewTopicForm';\nimport { TopicsList } from 'components/TopicsList';\nimport { Routes } from 'models/Routes';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    container: {\n      padding: theme.spacing(3)\n    },\n    gridList: {\n      marginTop: theme.spacing(3)\n    }\n  });\n});\nexport { useStyles };\n\nfunction Home(_ref) {\n  _s();\n\n  var getTopics = _ref.getTopics,\n      addTopic = _ref.addTopic;\n  var router = useRouter();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user,\n      loading = _useAuth.loading;\n\n  var styles = useStyles();\n\n  var _useState = useState([]),\n      topics = _useState[0],\n      setTopics = _useState[1];\n\n  useEffect(function () {\n    var isMounted = true;\n\n    if (user === null || user === void 0 ? void 0 : user.token) {\n      getTopics({\n        token: user.token\n      }).then(function (topics) {\n        if (isMounted) {\n          setTopics(topics);\n        }\n      });\n    }\n\n    return function () {\n      isMounted = false;\n    };\n  }, [user]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!user) {\n    return router.push(Routes.login());\n  }\n\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(NewTopicForm, {\n          onTopicAdded: function onTopicAdded(_ref2) {\n            var name = _ref2.name;\n            return addTopic(user.token, {\n              name: name\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TopicsList, {\n          items: topics,\n          onItemRemoved: function onItemRemoved(topicId) {// removeTopic(user.uid, topicId)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"+8+/UvZ7vgNiMnEpfMMw9HDwiUY=\", false, function () {\n  return [useRouter, useAuth, useStyles];\n});\n\n_c = Home;\nHome.displayName = Pages.Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/index.tsx"],"names":["useState","useEffect","useRouter","Grid","useAuth","Pages","Header","NewTopicForm","TopicsList","Routes","makeStyles","createStyles","useStyles","theme","container","padding","spacing","gridList","marginTop","Home","getTopics","addTopic","router","user","loading","styles","topics","setTopics","isMounted","token","then","push","login","console","log","name","topicId","displayName"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAGA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,0BAAzC;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAAAG,KAAK;AAAA,SAChCF,YAAY,CAAC;AACXG,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,KADA;AAIXC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd;AADH;AAJC,GAAD,CADoB;AAAA,CAAN,CAA5B;AAWA,SAASJ,SAAT;;AAEA,SAASO,IAAT,OAAmG;AAAA;;AAAA,MAAnFC,SAAmF,QAAnFA,SAAmF;AAAA,MAAxEC,QAAwE,QAAxEA,QAAwE;AACjG,MAAMC,MAAM,GAAGpB,SAAS,EAAxB;;AADiG,iBAEvEE,OAAO,EAFgE;AAAA,MAEzFmB,IAFyF,YAEzFA,IAFyF;AAAA,MAEnFC,OAFmF,YAEnFA,OAFmF;;AAGjG,MAAMC,MAAM,GAAGb,SAAS,EAAxB;;AAHiG,kBAIrEZ,QAAQ,CAAU,EAAV,CAJ6D;AAAA,MAI1F0B,MAJ0F;AAAA,MAIlFC,SAJkF;;AAMjG1B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI2B,SAAS,GAAG,IAAhB;;AAEA,QAAIL,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEM,KAAV,EAAiB;AACfT,MAAAA,SAAS,CAAC;AAAES,QAAAA,KAAK,EAAEN,IAAI,CAACM;AAAd,OAAD,CAAT,CAAiCC,IAAjC,CAAsC,UAAAJ,MAAM,EAAI;AAC9C,YAAIE,SAAJ,EAAe;AACbD,UAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AACF,OAJD;AAKD;;AAED,WAAO,YAAM;AACXE,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GAdQ,EAcN,CAACL,IAAD,CAdM,CAAT;;AAgBA,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACD,IAAL,EAAW;AACT,WAAOD,MAAM,CAACS,IAAP,CAAYtB,MAAM,CAACuB,KAAP,EAAZ,CAAP;AACD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,QAA1B;AAAmC,MAAA,SAAS,EAAEE,MAAM,CAACX,SAArD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,YAAY,EAAE;AAAA,gBAAGqB,IAAH,SAAGA,IAAH;AAAA,mBAAcd,QAAQ,CAACE,IAAI,CAACM,KAAN,EAAa;AAAEM,cAAAA,IAAI,EAAJA;AAAF,aAAb,CAAtB;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAET,MADT;AAEE,UAAA,aAAa,EAAE,uBAACU,OAAD,EAAqB,CAClC;AACD;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkBD;;GAlDQjB,I;UACQjB,S,EACWE,O,EACXQ,S;;;KAHRO,I;AAoDTA,IAAI,CAACkB,WAAL,GAAmBhC,KAAK,CAACc,IAAzB;AAEA,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Grid from '@material-ui/core/Grid'\nimport { GetTopicsUseCase, AddTopicUseCase } from '@flashcards/client'\nimport { Topic } from '@flashcards/core'\nimport { useAuth } from 'contexts/auth'\nimport { Pages } from 'models'\nimport { Header } from 'components/Header'\nimport { NewTopicForm } from 'components/NewTopicForm'\nimport { TopicsList } from 'components/TopicsList'\nimport { Routes } from 'models/Routes'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    container: {\n      padding: theme.spacing(3),\n    },\n    gridList: {\n      marginTop: theme.spacing(3),\n    },\n  }),\n)\n\nexport { useStyles }\n\nfunction Home({ getTopics, addTopic }: { getTopics: GetTopicsUseCase; addTopic: AddTopicUseCase }) {\n  const router = useRouter()\n  const { user, loading } = useAuth()\n  const styles = useStyles()\n  const [topics, setTopics] = useState<Topic[]>([])\n\n  useEffect(() => {\n    let isMounted = true\n\n    if (user?.token) {\n      getTopics({ token: user.token }).then(topics => {\n        if (isMounted) {\n          setTopics(topics)\n        }\n      })\n    }\n\n    return () => {\n      isMounted = false\n    }\n  }, [user])\n\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  if (!user) {\n    return router.push(Routes.login())\n  }\n\n  console.log(user)\n\n  return (\n    <>\n      <Header />\n      <Grid container direction=\"column\" className={styles.container}>\n        <Grid item>\n          <NewTopicForm onTopicAdded={({ name }) => addTopic(user.token, { name })} />\n        </Grid>\n        <Grid item>\n          <TopicsList\n            items={topics}\n            onItemRemoved={(topicId: string) => {\n              // removeTopic(user.uid, topicId)\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nHome.displayName = Pages.Home\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}