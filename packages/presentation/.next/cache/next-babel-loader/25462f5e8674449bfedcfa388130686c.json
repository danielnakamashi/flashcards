{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { CardData, TopicData } from '@flashcards/usecase';\nimport { useToken } from '@/hooks/useToken';\nimport { getTopic } from '@/main';\n\nfunction useTopic(topicId) {\n  const token = useToken();\n  const {\n    0: topic,\n    1: setTopic\n  } = useState();\n  useEffect(() => {\n    let isMounted = true;\n\n    if (token) {\n      getTopic(token, topicId).then(data => {\n        if (isMounted) {\n          setTopic(new TopicData({\n            id: data.id,\n            name: data.name,\n            cards: data.cards.map(card => new CardData(card))\n          }));\n        }\n      });\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [token]);\n  return topic;\n}\n\nexport { useTopic };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/hooks/useTopic.ts"],"names":["useState","useEffect","CardData","TopicData","useToken","getTopic","useTopic","topicId","token","topic","setTopic","isMounted","then","data","id","name","cards","map","card"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,qBAApC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,QAAT,QAAyB,QAAzB;;AAEA,SAASC,QAAT,CAAkBC,OAAlB,EAA0D;AACxD,QAAMC,KAAK,GAAGJ,QAAQ,EAAtB;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,SAAS,GAAG,IAAhB;;AAEA,QAAIH,KAAJ,EAAW;AACTH,MAAAA,QAAQ,CAACG,KAAD,EAAQD,OAAR,CAAR,CAAyBK,IAAzB,CAA8BC,IAAI,IAAI;AACpC,YAAIF,SAAJ,EAAe;AACbD,UAAAA,QAAQ,CACN,IAAIP,SAAJ,CAAc;AACZW,YAAAA,EAAE,EAAED,IAAI,CAACC,EADG;AAEZC,YAAAA,IAAI,EAAEF,IAAI,CAACE,IAFC;AAGZC,YAAAA,KAAK,EAAEH,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI,IAAIhB,QAAJ,CAAagB,IAAb,CAAvB;AAHK,WAAd,CADM,CAAR;AAOD;AACF,OAVD;AAWD;;AAED,WAAO,MAAM;AACXP,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GApBQ,EAoBN,CAACH,KAAD,CApBM,CAAT;AAsBA,SAAOC,KAAP;AACD;;AAED,SAASH,QAAT","sourcesContent":["import { useState, useEffect } from 'react'\nimport { CardData, TopicData } from '@flashcards/usecase'\nimport { useToken } from '@/hooks/useToken'\nimport { getTopic } from '@/main'\n\nfunction useTopic(topicId: string): TopicData | undefined {\n  const token = useToken()\n  const [topic, setTopic] = useState<TopicData | undefined>()\n\n  useEffect(() => {\n    let isMounted = true\n\n    if (token) {\n      getTopic(token, topicId).then(data => {\n        if (isMounted) {\n          setTopic(\n            new TopicData({\n              id: data.id,\n              name: data.name,\n              cards: data.cards.map(card => new CardData(card)),\n            }),\n          )\n        }\n      })\n    }\n\n    return () => {\n      isMounted = false\n    }\n  }, [token])\n\n  return topic\n}\n\nexport { useTopic }\n"]},"metadata":{},"sourceType":"module"}