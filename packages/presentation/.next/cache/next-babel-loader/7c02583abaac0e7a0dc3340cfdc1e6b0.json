{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/hocs/withRedirectToLogin.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport { useAuth } from '../contexts/auth';\nimport { Routes } from '../models';\n\nconst withRedirectToLogin = Component => props => {\n  const {\n    user,\n    loading\n  } = useAuth();\n  const router = useRouter();\n\n  if (!user && !loading) {\n    router.push(Routes.login());\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n\nexport { withRedirectToLogin };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/hocs/withRedirectToLogin.tsx"],"names":["useRouter","useAuth","Routes","withRedirectToLogin","Component","props","user","loading","router","push","login"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,mBAAmB,GACvBC,SAD0B,IAG1BC,KADsB,IAEC;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBN,OAAO,EAAjC;AACA,QAAMO,MAAM,GAAGR,SAAS,EAAxB;;AAEA,MAAI,CAACM,IAAD,IAAS,CAACC,OAAd,EAAuB;AACrBC,IAAAA,MAAM,CAACC,IAAP,CAAYP,MAAM,CAACQ,KAAP,EAAZ;AACA,WAAO,IAAP;AACD;;AAED,sBAAO,QAAC,SAAD,oBAAeL,KAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAdD;;AAgBA,SAASF,mBAAT","sourcesContent":["import { useRouter } from 'next/router'\nimport { useAuth } from '../contexts/auth'\nimport { Routes } from '../models'\n\nconst withRedirectToLogin = (\n  Component: React.ElementType,\n): React.ElementType => (\n  props: Record<string, unknown>,\n): React.ReactElement => {\n  const { user, loading } = useAuth()\n  const router = useRouter()\n\n  if (!user && !loading) {\n    router.push(Routes.login())\n    return null\n  }\n\n  return <Component {...props} />\n}\n\nexport { withRedirectToLogin }\n"]},"metadata":{},"sourceType":"module"}