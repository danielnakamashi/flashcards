{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/home/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from 'contexts/auth';\nimport { Pages } from 'models';\nimport { Header } from 'components/Header';\nimport { NewTopicForm } from 'components/NewTopicForm';\nimport { TopicsList } from 'components/TopicsList';\nimport { useUseCases } from 'hooks/useUseCases';\nimport { useStyles } from './Home.styles';\nimport { withAuth } from 'hocs/withAuth';\nimport { withRedirectToLogin } from 'hocs/withRedirectToLogin';\n\nvar Home = function Home() {\n  _s();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user,\n      getToken = _useAuth.getToken;\n\n  var styles = useStyles();\n\n  var _useState = useState([]),\n      topics = _useState[0],\n      setTopics = _useState[1];\n\n  var _useState2 = useState(''),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useUseCases = useUseCases(),\n      getTopicsObserver = _useUseCases.getTopicsObserver,\n      addTopic = _useUseCases.addTopic,\n      removeTopic = _useUseCases.removeTopic;\n\n  useEffect(function () {\n    var isMounted = true;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var token;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getToken();\n\n            case 2:\n              token = _context.sent;\n\n              if (token && isMounted) {\n                setToken(token);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n\n    return function () {\n      isMounted = false;\n    };\n  }, [user]);\n  useEffect(function () {\n    var isMounted = true;\n\n    if (token) {\n      var unsubscribe = getTopicsObserver(token).subscribe(function (topics) {\n        if (isMounted) {\n          setTopics(topics);\n        }\n      });\n      return function () {\n        isMounted = false;\n        unsubscribe();\n      };\n    }\n\n    return function () {\n      isMounted = false;\n    };\n  }, [token]);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(NewTopicForm, {\n    onTopicSubmitted: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n        var name;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                name = _ref2.name;\n                addTopic(token, {\n                  name: name\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(TopicsList, {\n    items: topics,\n    onItemRemoved: /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(topicId) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                removeTopic(token, topicId);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Home, \"IE8liSkBFJYZq3to7zxaPsQOrY0=\", false, function () {\n  return [useAuth, useStyles, useUseCases];\n});\n\n_c = Home;\nHome.displayName = Pages.Home;\nvar HomeDecorated = withAuth(_c2 = withRedirectToLogin(Home));\n_c3 = HomeDecorated;\nexport { HomeDecorated as Home };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"HomeDecorated$withAuth\");\n$RefreshReg$(_c3, \"HomeDecorated\");","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/home/Home.tsx"],"names":["useState","useEffect","Grid","useAuth","Pages","Header","NewTopicForm","TopicsList","useUseCases","useStyles","withAuth","withRedirectToLogin","Home","user","getToken","styles","topics","setTopics","token","setToken","getTopicsObserver","addTopic","removeTopic","isMounted","unsubscribe","subscribe","container","name","topicId","displayName","HomeDecorated"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { Topic } from '@flashcards/core'\nimport { useAuth } from 'contexts/auth'\nimport { Pages } from 'models'\nimport { Header } from 'components/Header'\nimport { NewTopicForm } from 'components/NewTopicForm'\nimport { TopicsList } from 'components/TopicsList'\nimport { useUseCases } from 'hooks/useUseCases'\nimport { useStyles } from './Home.styles'\nimport { withAuth } from 'hocs/withAuth'\nimport { withRedirectToLogin } from 'hocs/withRedirectToLogin'\n\nconst Home = () => {\n  const { user, getToken } = useAuth()\n  const styles = useStyles()\n  const [topics, setTopics] = useState<Topic[]>([])\n  const [token, setToken] = useState<string>('')\n  const { getTopicsObserver, addTopic, removeTopic } = useUseCases()\n\n  useEffect(() => {\n    let isMounted = true\n    ;(async () => {\n      const token = await getToken()\n      if (token && isMounted) {\n        setToken(token)\n      }\n    })()\n\n    return () => {\n      isMounted = false\n    }\n  }, [user])\n\n  useEffect(() => {\n    let isMounted = true\n\n    if (token) {\n      const unsubscribe = getTopicsObserver(token).subscribe(topics => {\n        if (isMounted) {\n          setTopics(topics)\n        }\n      })\n\n      return () => {\n        isMounted = false\n        unsubscribe()\n      }\n    }\n\n    return () => {\n      isMounted = false\n    }\n  }, [token])\n\n  return (\n    <>\n      <Header />\n      <Grid container direction=\"column\" className={styles.container}>\n        <Grid item>\n          <NewTopicForm\n            onTopicSubmitted={async ({ name }) => {\n              addTopic(token, { name })\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <TopicsList\n            items={topics}\n            onItemRemoved={async (topicId: string) => {\n              removeTopic(token, topicId)\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nHome.displayName = Pages.Home\n\nconst HomeDecorated = withAuth(withRedirectToLogin(Home))\n\nexport { HomeDecorated as Home }\n"]},"metadata":{},"sourceType":"module"}