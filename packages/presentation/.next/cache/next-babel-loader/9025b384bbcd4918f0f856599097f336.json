{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/index.tsx\";\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from 'contexts/auth';\nimport { Pages } from 'models';\nimport { Header } from 'components/Header';\nimport { NewTopicForm } from 'components/NewTopicForm';\nimport { TopicsList } from 'components/TopicsList';\nimport { Routes } from 'models/Routes';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    padding: theme.spacing(3)\n  },\n  gridList: {\n    marginTop: theme.spacing(3)\n  }\n}));\nexport { useStyles };\n\nfunction Home({\n  getTopics,\n  addTopic\n}) {\n  const router = useRouter();\n  const {\n    user,\n    loading,\n    getToken\n  } = useAuth();\n  const styles = useStyles();\n  const {\n    0: topics,\n    1: setTopics\n  } = useState([]);\n  useEffect(() => {\n    let isMounted = true;\n    const observer = getTopics({\n      token: user.token\n    });\n    const unsubscribe = observer.subscribe(topics => {\n      getToken().then(token => {\n        if (isMounted && token) {\n          setTopics(topics);\n        }\n      });\n    });\n    return () => {\n      unsubscribe();\n      isMounted = false;\n    };\n    getToken().then(token => {\n      if (token) {\n        return getTopicsObserver({\n          token: user.token\n        });\n      }\n    });\n\n    if (user) {}\n  }, [user]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!user) {\n    return router.push(Routes.login());\n  }\n\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(NewTopicForm, {\n          onTopicSubmitted: ({\n            name\n          }) => addTopic(user.token, {\n            name\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TopicsList, {\n          items: topics,\n          onItemRemoved: topicId => {// removeTopic(user.uid, topicId)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nHome.displayName = Pages.Home;\nexport default Home;","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/index.tsx"],"names":["useState","useEffect","useRouter","Grid","useAuth","Pages","Header","NewTopicForm","TopicsList","Routes","makeStyles","createStyles","useStyles","theme","container","padding","spacing","gridList","marginTop","Home","getTopics","addTopic","router","user","loading","getToken","styles","topics","setTopics","isMounted","observer","token","unsubscribe","subscribe","then","getTopicsObserver","push","login","console","log","name","topicId","displayName"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Grid from '@material-ui/core/Grid'\nimport { GetTopicsUseCase, AddTopicUseCase } from '@flashcards/client'\nimport { Topic } from '@flashcards/core'\nimport { useAuth } from 'contexts/auth'\nimport { Pages } from 'models'\nimport { Header } from 'components/Header'\nimport { NewTopicForm } from 'components/NewTopicForm'\nimport { TopicsList } from 'components/TopicsList'\nimport { Routes } from 'models/Routes'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    container: {\n      padding: theme.spacing(3),\n    },\n    gridList: {\n      marginTop: theme.spacing(3),\n    },\n  }),\n)\n\nexport { useStyles }\n\nfunction Home({ getTopics, addTopic }: { getTopics: GetTopicsUseCase; addTopic: AddTopicUseCase }) {\n  const router = useRouter()\n  const { user, loading, getToken } = useAuth()\n  const styles = useStyles()\n  const [topics, setTopics] = useState<Topic[]>([])\n\n  useEffect(() => {\n    let isMounted = true\n    const observer = getTopics({ token: user.token })\n    const unsubscribe = observer.subscribe(topics => {\n      getToken().then(token => {\n        if (isMounted && token) {\n          setTopics(topics)\n        }\n      })\n    })\n\n    return () => {\n      unsubscribe()\n      isMounted = false\n    }\n\n    getToken().then(token => {\n      if (token) {\n        return getTopicsObserver({ token: user.token })\n      }\n    })\n\n    if (user) {\n    }\n  }, [user])\n\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  if (!user) {\n    return router.push(Routes.login())\n  }\n\n  console.log(user)\n\n  return (\n    <>\n      <Header />\n      <Grid container direction=\"column\" className={styles.container}>\n        <Grid item>\n          <NewTopicForm onTopicSubmitted={({ name }) => addTopic(user.token, { name })} />\n        </Grid>\n        <Grid item>\n          <TopicsList\n            items={topics}\n            onItemRemoved={(topicId: string) => {\n              // removeTopic(user.uid, topicId)\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nHome.displayName = Pages.Home\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}