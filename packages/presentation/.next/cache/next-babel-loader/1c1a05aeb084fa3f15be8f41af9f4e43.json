{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card } from '@flashcards/core';\n\nclass UseCases {\n  constructor(firebaseService, graphqlService) {\n    _defineProperty(this, \"firebaseService\", void 0);\n\n    _defineProperty(this, \"graphqlService\", void 0);\n\n    this.firebaseService = firebaseService;\n    this.graphqlService = graphqlService;\n  }\n\n  async addCard(token, input) {\n    const cardData = await this.graphqlService.addCard(token, input);\n    return new Card(cardData);\n  }\n\n}\n\nexport { UseCases };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/node_modules/@flashcards/client/src/usecase/index.ts"],"names":["Card","UseCases","constructor","firebaseService","graphqlService","addCard","token","input","cardData"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,kBAArB;;AAKA,MAAMC,QAAN,CAAyC;AAIvCC,EAAAA,WAAW,CAACC,eAAD,EAAmCC,cAAnC,EAAmE;AAAA;;AAAA;;AAC5E,SAAKD,eAAL,GAAuBA,eAAvB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACD;;AAED,QAAMC,OAAN,CAAcC,KAAd,EAA6BC,KAA7B,EAAiE;AAC/D,UAAMC,QAAQ,GAAG,MAAM,KAAKJ,cAAL,CAAoBC,OAApB,CAA4BC,KAA5B,EAAmCC,KAAnC,CAAvB;AACA,WAAO,IAAIP,IAAJ,CAASQ,QAAT,CAAP;AACD;;AAZsC;;AAezC,SAASP,QAAT","sourcesContent":["import { Card } from '@flashcards/core'\nimport { FirebaseService } from '../service/firebase/service'\nimport { GraphqlService } from '../service/graphql/service'\nimport { AddCardInput, AddCardUseCase } from './AddCard'\n\nclass UseCases implements AddCardUseCase {\n  private readonly firebaseService: FirebaseService\n  private readonly graphqlService: GraphqlService\n\n  constructor(firebaseService: FirebaseService, graphqlService: GraphqlService) {\n    this.firebaseService = firebaseService\n    this.graphqlService = graphqlService\n  }\n\n  async addCard(token: string, input: AddCardInput): Promise<Card> {\n    const cardData = await this.graphqlService.addCard(token, input)\n    return new Card(cardData)\n  }\n}\n\nexport { UseCases }\n"]},"metadata":{},"sourceType":"module"}