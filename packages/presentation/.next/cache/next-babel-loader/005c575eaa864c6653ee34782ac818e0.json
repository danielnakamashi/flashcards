{"ast":null,"code":"var _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/hocs/withRedirectToLogin.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useRouter } from 'next/router';\nimport { useAuth } from '../contexts/auth';\nimport { Routes } from '../models';\n\nconst withRedirectToLogin = Component => {\n  return props => {\n    const {\n      user,\n      loading\n    } = useAuth();\n    const router = useRouter();\n\n    if (loading) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    if (!user) {\n      router.push(Routes.login());\n      return null;\n    }\n\n    return __jsx(Component, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }));\n  };\n};\n\nexport { withRedirectToLogin };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/hocs/withRedirectToLogin.tsx"],"names":["useRouter","useAuth","Routes","withRedirectToLogin","Component","props","user","loading","router","push","login"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,mBAAmB,GAAIC,SAAD,IAAqD;AAC/E,SAAQC,KAAD,IAAwD;AAC7D,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoBN,OAAO,EAAjC;AACA,UAAMO,MAAM,GAAGR,SAAS,EAAxB;;AAEA,QAAIO,OAAJ,EAAa;AACX,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,QAAI,CAACD,IAAL,EAAW;AACTE,MAAAA,MAAM,CAACC,IAAP,CAAYP,MAAM,CAACQ,KAAP,EAAZ;AACA,aAAO,IAAP;AACD;;AAED,WAAO,MAAC,SAAD,eAAeL,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAdD;AAeD,CAhBD;;AAkBA,SAASF,mBAAT","sourcesContent":["import { useRouter } from 'next/router'\nimport { useAuth } from '../contexts/auth'\nimport { Routes } from '../models'\n\nconst withRedirectToLogin = (Component: React.ElementType): React.ElementType => {\n  return (props: Record<string, unknown>): React.ReactElement => {\n    const { user, loading } = useAuth()\n    const router = useRouter()\n\n    if (loading) {\n      return <div>Loading...</div>\n    }\n\n    if (!user) {\n      router.push(Routes.login())\n      return null\n    }\n\n    return <Component {...props} />\n  }\n}\n\nexport { withRedirectToLogin }\n"]},"metadata":{},"sourceType":"module"}