{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Card, Topic } from '@flashcards/core';\n\nfunction createAddTopic(service) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token, data) {\n      var topicData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return service.addTopic(token, data);\n\n            case 2:\n              topicData = _context.sent;\n              return _context.abrupt(\"return\", new Topic({\n                id: topicData.id,\n                name: topicData.name,\n                cards: topicData.cards.map(function (card) {\n                  return new Card(card);\n                })\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\n\nexport { createAddTopic };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/node_modules/@flashcards/client/src/usecase/AddTopic/createAddTopic.ts"],"names":["Card","Topic","createAddTopic","service","token","data","addTopic","topicData","id","name","cards","map","card"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;;AAIA,SAASC,cAAT,CAAwBC,OAAxB,EAAmE;AACjE;AAAA,wEAAO,iBAAgBC,KAAhB,EAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACmBF,OAAO,CAACG,QAAR,CAAiBF,KAAjB,EAAwBC,IAAxB,CADnB;;AAAA;AACCE,cAAAA,SADD;AAAA,+CAEE,IAAIN,KAAJ,CAAU;AACfO,gBAAAA,EAAE,EAAED,SAAS,CAACC,EADC;AAEfC,gBAAAA,IAAI,EAAEF,SAAS,CAACE,IAFD;AAGfC,gBAAAA,KAAK,EAAEH,SAAS,CAACG,KAAV,CAAgBC,GAAhB,CAAoB,UAAAC,IAAI;AAAA,yBAAI,IAAIZ,IAAJ,CAASY,IAAT,CAAJ;AAAA,iBAAxB;AAHQ,eAAV,CAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAQD;;AAED,SAASV,cAAT","sourcesContent":["import { Card, Topic } from '@flashcards/core'\nimport { AddTopicService } from './AddTopicService'\nimport { AddTopicInput, AddTopicUseCase } from './AddTopicUseCase'\n\nfunction createAddTopic(service: AddTopicService): AddTopicUseCase {\n  return async function (token: string, data: AddTopicInput): Promise<Topic> {\n    const topicData = await service.addTopic(token, data)\n    return new Topic({\n      id: topicData.id,\n      name: topicData.name,\n      cards: topicData.cards.map(card => new Card(card)),\n    })\n  }\n}\n\nexport { createAddTopic }\n"]},"metadata":{},"sourceType":"module"}