{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/components/StudyPile/StudyPile.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport Shuffle from '@material-ui/icons/Shuffle';\nimport { Flashcard } from '../Flashcard';\nimport { useStyles } from './StudyPile.style';\n\nvar StudyPile = function StudyPile(_ref) {\n  _s();\n\n  var cards = _ref.cards,\n      onShuffle = _ref.onShuffle;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentCardIndex = _React$useState2[0],\n      setCurrentCardIndex = _React$useState2[1];\n\n  var cls = useStyles();\n\n  if (!cards.length) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      position: \"relative\",\n      marginTop: \"60px\",\n      height: \"380px\",\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: cls.paper\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: cls.paper\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Flashcard, {\n        front: cards[currentCardIndex].front,\n        containerClassName: cls.flashCard,\n        children: cards[currentCardIndex].back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        title: \"previous\",\n        color: \"primary\",\n        onClick: function onClick() {\n          setCurrentCardIndex(function (index) {\n            return index - 1;\n          });\n        },\n        disabled: currentCardIndex === 0,\n        children: /*#__PURE__*/_jsxDEV(ArrowBack, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [currentCardIndex + 1, \" / \", cards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n        title: \"next\",\n        color: \"primary\",\n        onClick: function onClick() {\n          setCurrentCardIndex(function (index) {\n            return index + 1;\n          });\n        },\n        disabled: currentCardIndex === cards.length - 1,\n        children: /*#__PURE__*/_jsxDEV(ArrowForward, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n        title: \"shuffle\",\n        color: \"primary\",\n        onClick: function onClick() {\n          onShuffle();\n          setCurrentCardIndex(0);\n        },\n        children: /*#__PURE__*/_jsxDEV(Shuffle, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(StudyPile, \"56zSFsz5gAJNSaZm1/zvjziM/hI=\", false, function () {\n  return [useStyles];\n});\n\n_c = StudyPile;\nexport { StudyPile };\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyPile\");","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/components/StudyPile/StudyPile.tsx"],"names":["React","Container","Paper","Box","IconButton","Typography","ArrowBack","ArrowForward","Shuffle","Flashcard","useStyles","StudyPile","cards","onShuffle","useState","currentCardIndex","setCurrentCardIndex","cls","length","paper","front","flashCard","back","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport ArrowForward from '@material-ui/icons/ArrowForward'\nimport Shuffle from '@material-ui/icons/Shuffle'\nimport { Flashcard } from '../Flashcard'\nimport { useStyles } from './StudyPile.style'\nimport { CardData } from '@flashcards/usecase'\n\ntype Props = {\n  cards: CardData[]\n  onShuffle: () => void\n}\n\nconst StudyPile: React.FC<Props> = ({ cards, onShuffle }) => {\n  const [currentCardIndex, setCurrentCardIndex] = React.useState(0)\n  const cls = useStyles()\n\n  if (!cards.length) {\n    return null\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        position=\"relative\"\n        marginTop=\"60px\"\n        height=\"380px\"\n      >\n        <Paper elevation={3} className={cls.paper}></Paper>\n        <Paper elevation={3} className={cls.paper}></Paper>\n        <Flashcard front={cards[currentCardIndex].front} containerClassName={cls.flashCard}>\n          {cards[currentCardIndex].back}\n        </Flashcard>\n      </Box>\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <IconButton\n          title=\"previous\"\n          color=\"primary\"\n          onClick={() => {\n            setCurrentCardIndex(index => index - 1)\n          }}\n          disabled={currentCardIndex === 0}\n        >\n          <ArrowBack fontSize=\"large\" />\n        </IconButton>\n        <Typography>\n          {currentCardIndex + 1} / {cards.length}\n        </Typography>\n        <IconButton\n          title=\"next\"\n          color=\"primary\"\n          onClick={() => {\n            setCurrentCardIndex(index => index + 1)\n          }}\n          disabled={currentCardIndex === cards.length - 1}\n        >\n          <ArrowForward fontSize=\"large\" />\n        </IconButton>\n        <IconButton\n          title=\"shuffle\"\n          color=\"primary\"\n          onClick={() => {\n            onShuffle()\n            setCurrentCardIndex(0)\n          }}\n        >\n          <Shuffle fontSize=\"large\" />\n        </IconButton>\n      </Box>\n    </Container>\n  )\n}\n\nexport { StudyPile }\n"]},"metadata":{},"sourceType":"module"}