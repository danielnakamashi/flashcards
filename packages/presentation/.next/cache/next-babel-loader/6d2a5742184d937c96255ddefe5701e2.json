{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/contexts/auth.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport { factory } from '@flashcards/client';\nvar userObserver = factory.createUserObserver();\nvar initialState = {\n  user: null,\n  loading: true\n};\nvar AuthContext = /*#__PURE__*/React.createContext(initialState);\n\nvar reducer = function reducer(state, action) {\n  if (action.type === 'loaded') {\n    return {\n      loading: false,\n      user: action.payload\n    };\n  }\n\n  return state;\n};\n\nvar AuthProvider = function AuthProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _React$useReducer = React.useReducer(reducer, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    var isMounted = true;\n    userObserver(function (user) {\n      if (isMounted) {\n        dispatch({\n          type: 'loaded',\n          payload: user\n        });\n      }\n    });\n    return function () {\n      isMounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: state,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = AuthProvider;\n\nvar useAuth = function useAuth() {\n  _s2();\n\n  return React.useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/contexts/auth.tsx"],"names":["React","factory","userObserver","createUserObserver","initialState","user","loading","AuthContext","createContext","reducer","state","action","type","payload","AuthProvider","children","useReducer","dispatch","useEffect","isMounted","useAuth","useContext"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AASA,IAAMC,YAAY,GAAGD,OAAO,CAACE,kBAAR,EAArB;AACA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,OAAO,EAAE;AAAvB,CAArB;AACA,IAAMC,WAAW,gBAAGP,KAAK,CAACQ,aAAN,CAA2BJ,YAA3B,CAApB;;AAEA,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAeC,MAAf,EAAyC;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLN,MAAAA,OAAO,EAAE,KADJ;AAELD,MAAAA,IAAI,EAAEM,MAAM,CAACE;AAFR,KAAP;AAID;;AAED,SAAOH,KAAP;AACD,CATD;;AAeA,IAAMI,YAAY,GAAG,SAAfA,YAAe,OAAqC;AAAA;;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;;AAAA,0BAC9Bf,KAAK,CAACgB,UAAN,CAAiBP,OAAjB,EAA0BL,YAA1B,CAD8B;AAAA;AAAA,MACjDM,KADiD;AAAA,MAC1CO,QAD0C;;AAGxDjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAM;AACpB,QAAIC,SAAS,GAAG,IAAhB;AAEAjB,IAAAA,YAAY,CAAC,UAAAG,IAAI,EAAI;AACnB,UAAIc,SAAJ,EAAe;AACbF,QAAAA,QAAQ,CAAC;AAAEL,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,OAAO,EAAER;AAA3B,SAAD,CAAR;AACD;AACF,KAJW,CAAZ;AAMA,WAAO,YAAM;AACXc,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GAZD,EAYG,EAZH;AAcA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAET,KAA7B;AAAA,cAAqCK;AAArC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAlBD;;GAAMD,Y;;KAAAA,Y;;AAoBN,IAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,SAAOpB,KAAK,CAACqB,UAAN,CAAiBd,WAAjB,CAAP;AACD,CAFD;;IAAMa,O;;AAIN,SAASN,YAAT,EAAuBM,OAAvB","sourcesContent":["import * as React from 'react'\nimport type { UserData } from '@flashcards/client'\nimport { factory } from '@flashcards/client'\n\ntype State = {\n  user: UserData | null\n  loading: boolean\n}\n\ntype Action = { type: 'loaded'; payload: UserData | null }\n\nconst userObserver = factory.createUserObserver()\nconst initialState = { user: null, loading: true }\nconst AuthContext = React.createContext<State>(initialState)\n\nconst reducer = (state: State, action: Action): State => {\n  if (action.type === 'loaded') {\n    return {\n      loading: false,\n      user: action.payload,\n    }\n  }\n\n  return state\n}\n\ntype AuthProviderProps = {\n  children: React.ReactNode\n}\n\nconst AuthProvider = ({ children }: AuthProviderProps) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n\n  React.useEffect(() => {\n    let isMounted = true\n\n    userObserver(user => {\n      if (isMounted) {\n        dispatch({ type: 'loaded', payload: user })\n      }\n    })\n\n    return () => {\n      isMounted = false\n    }\n  }, [])\n\n  return <AuthContext.Provider value={state}>{children}</AuthContext.Provider>\n}\n\nconst useAuth = () => {\n  return React.useContext(AuthContext)\n}\n\nexport { AuthProvider, useAuth }\n"]},"metadata":{},"sourceType":"module"}