{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Card, Topic } from '@flashcards/core';\nimport { Observer } from '../service/Observer';\n\nvar GetTopicsObserver = /*#__PURE__*/function () {\n  function GetTopicsObserver(service) {\n    _classCallCheck(this, GetTopicsObserver);\n\n    _defineProperty(this, \"service\", void 0);\n\n    this.service = service;\n  }\n\n  _createClass(GetTopicsObserver, [{\n    key: \"getTopicsObserver\",\n    value: function getTopicsObserver(token) {\n      var _this = this;\n\n      return new Observer(function (next) {\n        var observer = _this.service.getTopicsObserver(token);\n\n        observer.subscribe(function (topicsData) {\n          next(topicsData.map(function (topicData) {\n            return new Topic({\n              id: topicData.id,\n              name: topicData.name,\n              cards: topicData.cards.map(function (card) {\n                return new Card(card);\n              })\n            });\n          }));\n        });\n      });\n    }\n  }]);\n\n  return GetTopicsObserver;\n}();\n\nexport { GetTopicsObserver };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/node_modules/@flashcards/client/src/main/GetTopicsObserver.ts"],"names":["Card","Topic","Observer","GetTopicsObserver","service","token","next","observer","getTopicsObserver","subscribe","topicsData","map","topicData","id","name","cards","card"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;IAGMC,iB;AAGJ,6BAAYC,OAAZ,EAA+C;AAAA;;AAAA;;AAC7C,SAAKA,OAAL,GAAeA,OAAf;AACD;;;;sCAEiBC,K,EAAoC;AAAA;;AACpD,aAAO,IAAIH,QAAJ,CAAa,UAAAI,IAAI,EAAI;AAC1B,YAAMC,QAAQ,GAAG,KAAI,CAACH,OAAL,CAAaI,iBAAb,CAA+BH,KAA/B,CAAjB;;AACAE,QAAAA,QAAQ,CAACE,SAAT,CAAmB,UAAAC,UAAU,EAAI;AAC/BJ,UAAAA,IAAI,CACFI,UAAU,CAACC,GAAX,CACE,UAAAC,SAAS;AAAA,mBACP,IAAIX,KAAJ,CAAU;AACRY,cAAAA,EAAE,EAAED,SAAS,CAACC,EADN;AAERC,cAAAA,IAAI,EAAEF,SAAS,CAACE,IAFR;AAGRC,cAAAA,KAAK,EAAEH,SAAS,CAACG,KAAV,CAAgBJ,GAAhB,CAAoB,UAAAK,IAAI;AAAA,uBAAI,IAAIhB,IAAJ,CAASgB,IAAT,CAAJ;AAAA,eAAxB;AAHC,aAAV,CADO;AAAA,WADX,CADE,CAAJ;AAUD,SAXD;AAYD,OAdM,CAAP;AAeD;;;;;;AAGH,SAASb,iBAAT","sourcesContent":["import { Card, Topic } from '@flashcards/core'\nimport { Observer } from '../service/Observer'\nimport { GetTopicsObserverUseCase, GetTopicsObserverService, Observable } from '../usecase'\n\nclass GetTopicsObserver implements GetTopicsObserverUseCase {\n  private readonly service: GetTopicsObserverService\n\n  constructor(service: GetTopicsObserverService) {\n    this.service = service\n  }\n\n  getTopicsObserver(token: string): Observable<Topic[]> {\n    return new Observer(next => {\n      const observer = this.service.getTopicsObserver(token)\n      observer.subscribe(topicsData => {\n        next(\n          topicsData.map(\n            topicData =>\n              new Topic({\n                id: topicData.id,\n                name: topicData.name,\n                cards: topicData.cards.map(card => new Card(card)),\n              }),\n          ),\n        )\n      })\n    })\n  }\n}\n\nexport { GetTopicsObserver }\n"]},"metadata":{},"sourceType":"module"}