{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass GetTopicsObserver {\n  constructor(service) {\n    _defineProperty(this, \"service\", void 0);\n\n    this.service = service;\n  }\n\n  getTopicsObserver(token) {\n    return this.service.getTopicsObserver(token);\n  }\n\n}\n\nexport { GetTopicsObserver };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/node_modules/@flashcards/client/src/main/GetTopicsObserver.ts"],"names":["GetTopicsObserver","constructor","service","getTopicsObserver","token"],"mappings":";;AAGA,MAAMA,iBAAN,CAA4D;AAG1DC,EAAAA,WAAW,CAACC,OAAD,EAAoC;AAAA;;AAC7C,SAAKA,OAAL,GAAeA,OAAf;AACD;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAqC;AACpD,WAAO,KAAKF,OAAL,CAAaC,iBAAb,CAA+BC,KAA/B,CAAP;AACD;;AATyD;;AAY5D,SAASJ,iBAAT","sourcesContent":["import { Topic } from '@flashcards/core'\nimport { GetTopicsObserverUseCase, Observable } from '../usecase'\n\nclass GetTopicsObserver implements GetTopicsObserverUseCase {\n  private readonly service: GetTopicsObserverUseCase\n\n  constructor(service: GetTopicsObserverService) {\n    this.service = service\n  }\n\n  getTopicsObserver(token: string): Observable<Topic[]> {\n    return this.service.getTopicsObserver(token)\n  }\n}\n\nexport { GetTopicsObserver }\n"]},"metadata":{},"sourceType":"module"}