{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/topic/[topicId]/study/Study.tsx\";\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { Pages } from '@/models';\nimport { withAuth } from '@/hocs/withAuth';\nimport { withRedirectToLogin } from '@/hocs/withRedirectToLogin';\nimport { useTopic } from '@/hooks/useTopic';\nimport { shuffleCards } from '@/main';\nimport { Header } from '@/components/Header';\nimport { StudyPile } from '@/components/StudyPile';\nimport { useStyles } from './Study.style';\n\nconst Study = () => {\n  var _topic$cards;\n\n  const styles = useStyles();\n  const router = useRouter();\n  const {\n    topicId\n  } = router.query;\n  const topic = useTopic(topicId);\n  const {\n    0: cards,\n    1: setCards\n  } = useState((_topic$cards = topic === null || topic === void 0 ? void 0 : topic.cards) !== null && _topic$cards !== void 0 ? _topic$cards : []);\n\n  if (!topic) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      pt: 2,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        component: \"main\",\n        \"data-testid\": \"topic-study-page\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          className: styles.title,\n          align: \"center\",\n          children: topic.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StudyPile, {\n          cards: cards,\n          onShuffle: () => {\n            shuffleCards(cards).then(shuffledCards => {\n              setCards(shuffledCards);\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nStudy.displayName = Pages.TopicStudy;\nconst StudyDecorated = withAuth(withRedirectToLogin(Study));\nexport { StudyDecorated as default };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/topic/[topicId]/study/Study.tsx"],"names":["useState","useRouter","Box","Container","Typography","Pages","withAuth","withRedirectToLogin","useTopic","shuffleCards","Header","StudyPile","useStyles","Study","styles","router","topicId","query","topic","cards","setCards","title","name","then","shuffledCards","displayName","TopicStudy","StudyDecorated","default"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SAASC,SAAT,QAA0B,eAA1B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAMG,MAAM,GAAGd,SAAS,EAAxB;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAcD,MAAM,CAACE,KAA3B;AACA,QAAMC,KAAK,GAAGV,QAAQ,CAACQ,OAAD,CAAtB;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBpB,QAAQ,iBAAakB,KAAb,aAAaA,KAAb,uBAAaA,KAAK,CAAEC,KAApB,uDAA6B,EAA7B,CAAlC;;AAEA,MAAI,CAACD,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,MAAnC;AAA0C,uBAAY,kBAAtD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAEJ,MAAM,CAACO,KAA3C;AAAkD,UAAA,KAAK,EAAC,QAAxD;AAAA,oBACGH,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,SAAD;AACE,UAAA,KAAK,EAAEH,KADT;AAEE,UAAA,SAAS,EAAE,MAAM;AACfV,YAAAA,YAAY,CAACU,KAAD,CAAZ,CAAoBI,IAApB,CAAyBC,aAAa,IAAI;AACxCJ,cAAAA,QAAQ,CAACI,aAAD,CAAR;AACD,aAFD;AAGD;AANH;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAoBD,CA/BD;;AAiCAX,KAAK,CAACY,WAAN,GAAoBpB,KAAK,CAACqB,UAA1B;AAEA,MAAMC,cAAc,GAAGrB,QAAQ,CAACC,mBAAmB,CAACM,KAAD,CAApB,CAA/B;AAEA,SAASc,cAAc,IAAIC,OAA3B","sourcesContent":["import { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport { Pages } from '@/models'\nimport { withAuth } from '@/hocs/withAuth'\nimport { withRedirectToLogin } from '@/hocs/withRedirectToLogin'\nimport { useTopic } from '@/hooks/useTopic'\nimport { shuffleCards } from '@/main'\nimport { Header } from '@/components/Header'\nimport { StudyPile } from '@/components/StudyPile'\nimport { CardData } from '@flashcards/usecase'\nimport { useStyles } from './Study.style'\n\nconst Study = () => {\n  const styles = useStyles()\n  const router = useRouter()\n  const { topicId } = router.query as { topicId: string }\n  const topic = useTopic(topicId)\n  const [cards, setCards] = useState<CardData[]>(topic?.cards ?? [])\n\n  if (!topic) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <>\n      <Header />\n      <Box pt={2}>\n        <Container maxWidth=\"md\" component=\"main\" data-testid=\"topic-study-page\">\n          <Typography variant=\"h1\" className={styles.title} align=\"center\">\n            {topic.name}\n          </Typography>\n          <StudyPile\n            cards={cards}\n            onShuffle={() => {\n              shuffleCards(cards).then(shuffledCards => {\n                setCards(shuffledCards)\n              })\n            }}\n          />\n        </Container>\n      </Box>\n    </>\n  )\n}\n\nStudy.displayName = Pages.TopicStudy\n\nconst StudyDecorated = withAuth(withRedirectToLogin(Study))\n\nexport { StudyDecorated as default }\n"]},"metadata":{},"sourceType":"module"}