{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from '@/contexts/auth';\nimport { Pages } from '@/models';\nimport { Header } from '@/components/Header';\nimport { NewTopicForm } from '@/components/NewTopicForm';\nimport { TopicsList } from '@/components/TopicsList';\nimport { useUseCases } from '@/hooks/useUseCases';\nimport { useStyles } from './Topics.styles';\nimport { withAuth } from '@/hocs/withAuth';\nimport { withRedirectToLogin } from '@/hocs/withRedirectToLogin';\n\nvar Topics = function Topics() {\n  var _useAuth = useAuth(),\n      user = _useAuth.user,\n      getToken = _useAuth.getToken;\n\n  var styles = useStyles();\n\n  var _useState = useState([]),\n      topics = _useState[0],\n      setTopics = _useState[1];\n\n  var _useState2 = useState(''),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useUseCases = useUseCases(),\n      getTopicsObserver = _useUseCases.getTopicsObserver,\n      addTopic = _useUseCases.addTopic,\n      removeTopic = _useUseCases.removeTopic;\n\n  useEffect(function () {\n    var isMounted = true;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var token;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getToken();\n\n            case 2:\n              token = _context.sent;\n\n              if (token && isMounted) {\n                setToken(token);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n\n    return function () {\n      isMounted = false;\n    };\n  }, [user]);\n  useEffect(function () {\n    var isMounted = true;\n\n    if (token) {\n      var unsubscribe = getTopicsObserver(token).subscribe(function (topics) {\n        if (isMounted) {\n          setTopics(topics);\n        }\n      });\n      return function () {\n        isMounted = false;\n        unsubscribe();\n      };\n    }\n\n    return function () {\n      isMounted = false;\n    };\n  }, [token]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      direction: \"column\",\n      className: styles.container,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsx(NewTopicForm, {\n          onTopicSubmitted: /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n              var name;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      name = _ref2.name;\n                      addTopic(token, {\n                        name: name\n                      });\n\n                    case 2:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            return function (_x) {\n              return _ref3.apply(this, arguments);\n            };\n          }()\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsx(TopicsList, {\n          items: topics,\n          onItemRemoved: /*#__PURE__*/function () {\n            var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(topicId) {\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      removeTopic(token, topicId);\n\n                    case 1:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }));\n\n            return function (_x2) {\n              return _ref4.apply(this, arguments);\n            };\n          }()\n        })\n      })]\n    })]\n  });\n};\n\nTopics.displayName = Pages.Home;\nvar TopicsDecorated = withAuth(withRedirectToLogin(Topics));\nexport { TopicsDecorated as Topics };","map":null,"metadata":{},"sourceType":"module"}