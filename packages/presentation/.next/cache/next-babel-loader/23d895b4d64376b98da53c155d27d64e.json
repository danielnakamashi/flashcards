{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card, Topic } from '@flashcards/core';\nimport { Observer } from '../service/Observer';\n\nclass GetTopicsObserver {\n  constructor(service) {\n    _defineProperty(this, \"service\", void 0);\n\n    this.service = service;\n  }\n\n  getTopicsObserver(token) {\n    return new Observer((next, error) => {\n      const observer = this.service.getTopicsObserver(token);\n      observer.subscribe(topicsData => {\n        next(topicsData.map(topicData => new Topic({\n          id: topicData.id,\n          name: topicData.name,\n          cards: topicData.cards.map(card => new Card(card))\n        })));\n      });\n    });\n    return;\n  }\n\n}\n\nexport { GetTopicsObserver };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/node_modules/@flashcards/client/src/main/GetTopicsObserver.ts"],"names":["Card","Topic","Observer","GetTopicsObserver","constructor","service","getTopicsObserver","token","next","error","observer","subscribe","topicsData","map","topicData","id","name","cards","card"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAGA,MAAMC,iBAAN,CAA4D;AAG1DC,EAAAA,WAAW,CAACC,OAAD,EAAoC;AAAA;;AAC7C,SAAKA,OAAL,GAAeA,OAAf;AACD;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAqC;AACpD,WAAO,IAAIL,QAAJ,CAAa,CAACM,IAAD,EAAOC,KAAP,KAAiB;AACnC,YAAMC,QAAQ,GAAG,KAAKL,OAAL,CAAaC,iBAAb,CAA+BC,KAA/B,CAAjB;AACAG,MAAAA,QAAQ,CAACC,SAAT,CAAmBC,UAAU,IAAI;AAC/BJ,QAAAA,IAAI,CACFI,UAAU,CAACC,GAAX,CACEC,SAAS,IACP,IAAIb,KAAJ,CAAU;AACRc,UAAAA,EAAE,EAAED,SAAS,CAACC,EADN;AAERC,UAAAA,IAAI,EAAEF,SAAS,CAACE,IAFR;AAGRC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAAV,CAAgBJ,GAAhB,CAAoBK,IAAI,IAAI,IAAIlB,IAAJ,CAASkB,IAAT,CAA5B;AAHC,SAAV,CAFJ,CADE,CAAJ;AAUD,OAXD;AAYD,KAdM,CAAP;AAeA;AACD;;AAxByD;;AA2B5D,SAASf,iBAAT","sourcesContent":["import { Card, Topic } from '@flashcards/core'\nimport { Observer } from '../service/Observer'\nimport { GetTopicsObserverUseCase, GetTopicsObserverService, Observable } from '../usecase'\n\nclass GetTopicsObserver implements GetTopicsObserverUseCase {\n  private readonly service: GetTopicsObserverService\n\n  constructor(service: GetTopicsObserverService) {\n    this.service = service\n  }\n\n  getTopicsObserver(token: string): Observable<Topic[]> {\n    return new Observer((next, error) => {\n      const observer = this.service.getTopicsObserver(token)\n      observer.subscribe(topicsData => {\n        next(\n          topicsData.map(\n            topicData =>\n              new Topic({\n                id: topicData.id,\n                name: topicData.name,\n                cards: topicData.cards.map(card => new Card(card)),\n              }),\n          ),\n        )\n      })\n    })\n    return\n  }\n}\n\nexport { GetTopicsObserver }\n"]},"metadata":{},"sourceType":"module"}