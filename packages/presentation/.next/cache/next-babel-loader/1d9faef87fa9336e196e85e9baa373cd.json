{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Card, Topic } from '@flashcards/core';\n\nfunction createAddTopicUseCase(service) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token, data) {\n      var topicData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return service.addTopic(token, data);\n\n            case 2:\n              topicData = _context.sent;\n              return _context.abrupt(\"return\", new Topic(_objectSpread(_objectSpread({}, topicData), {}, {\n                cards: topicData.cards.map(function (cardData) {\n                  return new Card(cardData);\n                })\n              })));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\n\nexport { createAddTopicUseCase };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/node_modules/@flashcards/client/src/usecase/AddTopic/createAddTopic.ts"],"names":["Card","Topic","createAddTopicUseCase","service","token","data","addTopic","topicData","cards","map","cardData"],"mappings":";;;;;;;;AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;;AAIA,SAASC,qBAAT,CAA+BC,OAA/B,EAA0E;AACxE;AAAA,wEAAO,iBAAgBC,KAAhB,EAAuBC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACmBF,OAAO,CAACG,QAAR,CAAiBF,KAAjB,EAAwBC,IAAxB,CADnB;;AAAA;AACCE,cAAAA,SADD;AAAA,+CAGE,IAAIN,KAAJ,iCACFM,SADE;AAELC,gBAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,CAAgBC,GAAhB,CAAoB,UAAAC,QAAQ;AAAA,yBAAI,IAAIV,IAAJ,CAASU,QAAT,CAAJ;AAAA,iBAA5B;AAFF,iBAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAQD;;AAED,SAASR,qBAAT","sourcesContent":["import { Card, Topic } from '@flashcards/core'\nimport { AddTopicService } from './AddTopicService'\nimport { AddTopicUseCase } from './AddTopicUseCase'\n\nfunction createAddTopicUseCase(service: AddTopicService): AddTopicUseCase {\n  return async function (token, data) {\n    const topicData = await service.addTopic(token, data)\n\n    return new Topic({\n      ...topicData,\n      cards: topicData.cards.map(cardData => new Card(cardData)),\n    })\n  }\n}\n\nexport { createAddTopicUseCase }\n"]},"metadata":{},"sourceType":"module"}