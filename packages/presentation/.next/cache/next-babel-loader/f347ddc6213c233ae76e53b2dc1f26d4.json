{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/contexts/auth.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { factory } from '@flashcards/client';\nconst userObserver = factory.createUserObserver();\nconst AuthContext = /*#__PURE__*/React.createContext(null);\n\nconst useAuth = () => {\n  return React.useContext(AuthContext);\n};\n\nconst initialState = {\n  user: null,\n  loading: true\n};\n\nfunction reducer(state, action) {\n  if (action.type === 'loaded') {\n    return {\n      loading: false,\n      user: action.payload\n    };\n  }\n\n  return state;\n}\n\nconst AuthProvider = ({\n  children\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  React.useEffect(() => {\n    userObserver(user => {\n      dispatch({\n        type: 'loaded',\n        payload: user\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: state,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n\nconst withAuth = Component => props => {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/contexts/auth.tsx"],"names":["React","factory","userObserver","createUserObserver","AuthContext","createContext","useAuth","useContext","initialState","user","loading","reducer","state","action","type","payload","AuthProvider","children","dispatch","useReducer","useEffect","withAuth","Component","props"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AASA,MAAMC,YAAY,GAAGD,OAAO,CAACE,kBAAR,EAArB;AACA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,CAA2B,IAA3B,CAApB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,SAAON,KAAK,CAACO,UAAN,CAAiBH,WAAjB,CAAP;AACD,CAFD;;AAIA,MAAMI,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,OAAO,EAAE;AAAvB,CAArB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAA+BC,MAA/B,EAAsD;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLJ,MAAAA,OAAO,EAAE,KADJ;AAELD,MAAAA,IAAI,EAAEI,MAAM,CAACE;AAFR,KAAP;AAID;;AAED,SAAOH,KAAP;AACD;;AAMD,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AACxD,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBlB,KAAK,CAACmB,UAAN,CAAiBR,OAAjB,EAA0BH,YAA1B,CAA1B;AAEAR,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpBlB,IAAAA,YAAY,CAACO,IAAI,IAAI;AACnBS,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,OAAO,EAAEN;AAA3B,OAAD,CAAR;AACD,KAFW,CAAZ;AAGD,GAJD,EAIG,EAJH;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,KAA7B;AAAA,cAAqCK;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAVD;;AAYA,MAAMI,QAAQ,GAAGC,SAAS,IAAIC,KAAK,IAAI;AACrC,sBACE,QAAC,YAAD;AAAA,2BACE,QAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAQA,SAASP,YAAT,EAAuBV,OAAvB","sourcesContent":["import * as React from 'react'\nimport type { UserData } from '@flashcards/client'\nimport { factory } from '@flashcards/client'\n\ntype State = {\n  user: UserData | null\n  loading: boolean\n}\n\ntype Action = { type: 'loaded'; payload: UserData | null }\n\nconst userObserver = factory.createUserObserver()\nconst AuthContext = React.createContext<State>(null)\n\nconst useAuth = () => {\n  return React.useContext(AuthContext)\n}\n\nconst initialState = { user: null, loading: true }\n\nfunction reducer(state: State, action: Action): State {\n  if (action.type === 'loaded') {\n    return {\n      loading: false,\n      user: action.payload,\n    }\n  }\n\n  return state\n}\n\ntype AuthProviderProps = {\n  children: React.ReactNode\n}\n\nconst AuthProvider = ({ children }: AuthProviderProps) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n\n  React.useEffect(() => {\n    userObserver(user => {\n      dispatch({ type: 'loaded', payload: user })\n    })\n  }, [])\n\n  return <AuthContext.Provider value={state}>{children}</AuthContext.Provider>\n}\n\nconst withAuth = Component => props => {\n  return (\n    <AuthProvider>\n      <Component {...props} />\n    </AuthProvider>\n  )\n}\n\nexport { AuthProvider, useAuth }\n"]},"metadata":{},"sourceType":"module"}