{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/topic/[topicId].tsx\";\nimport { useRouter } from 'next/router';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Pages } from '@/models';\nimport { Header } from '@/components/Header';\nimport styles from './[topicId].style';\n\nconst Topic = () => {\n  const router = useRouter();\n  const {\n    topicId\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      \"data-testid\": \"topic-page\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 2,\n        className: styles.list,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            className: styles.title,\n            children: topicName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nTopic.displayName = Pages.Topic;\nexport default Topic;","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/topic/[topicId].tsx"],"names":["useRouter","Grid","Typography","Pages","Header","styles","Topic","router","topicId","query","list","title","topicName","displayName"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcD,MAAM,CAACE,KAA3B;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,qBAAY,YAAlB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,OAAO,EAAE,CAA5C;AAA+C,QAAA,SAAS,EAAEJ,MAAM,CAACK,IAAjE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAEL,MAAM,CAACM,KAA3C;AAAA,sBACGC;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAoCD,CAxCD;;AA0CAN,KAAK,CAACO,WAAN,GAAoBV,KAAK,CAACG,KAA1B;AAEA,eAAeA,KAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Pages } from '@/models'\nimport { Header } from '@/components/Header'\nimport styles from './[topicId].style'\n\nconst Topic = () => {\n  const router = useRouter()\n  const { topicId } = router.query\n\n  return (\n    <>\n      <Header />\n      <main data-testid=\"topic-page\">\n        <Grid container direction=\"column\" spacing={2} className={styles.list}>\n          <Grid item>\n            <Typography variant=\"h1\" className={styles.title}>\n              {topicName}\n            </Typography>\n          </Grid>\n          {/* <Grid item>\n            <NewCardForm\n              onAdd={async (question, answer) => {\n                await addCard({ question, answer }, topicId, user.uid)\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <Grid container direction=\"row\" spacing={2}>\n              {cards.map(card => (\n                <Grid item key={card.id} xs={12} sm={6} md={3}>\n                  <FlashCard\n                    front={card.question}\n                    containerClassName={styles.flashCard}\n                    onRemove={() => cardRemoveHandler(card)}\n                  >\n                    {card.answer}\n                  </FlashCard>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid> */}\n        </Grid>\n      </main>\n    </>\n  )\n}\n\nTopic.displayName = Pages.Topic\n\nexport default Topic\n"]},"metadata":{},"sourceType":"module"}