{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Card, Topic } from '@flashcards/core';\n\nfunction createGetTopics(service) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token) {\n      var topics;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return service.getTopics(token);\n\n            case 2:\n              topics = _context.sent;\n              return _context.abrupt(\"return\", topics.map(function (topicData) {\n                return new Topic({\n                  id: topicData.id,\n                  name: topicData.name,\n                  cards: topicData.cards.map(function (card) {\n                    return new Card(card);\n                  })\n                });\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\n\nexport { createGetTopics };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/node_modules/@flashcards/client/src/usecase/GetTopics/createGetTopics.ts"],"names":["Card","Topic","createGetTopics","service","token","getTopics","topics","map","topicData","id","name","cards","card"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;;AAIA,SAASC,eAAT,CAAyBC,OAAzB,EAAsE;AACpE;AAAA,wEAAO,iBAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACgBD,OAAO,CAACE,SAAR,CAAkBD,KAAlB,CADhB;;AAAA;AACCE,cAAAA,MADD;AAAA,+CAEEA,MAAM,CAACC,GAAP,CACL,UAAAC,SAAS;AAAA,uBACP,IAAIP,KAAJ,CAAU;AACRQ,kBAAAA,EAAE,EAAED,SAAS,CAACC,EADN;AAERC,kBAAAA,IAAI,EAAEF,SAAS,CAACE,IAFR;AAGRC,kBAAAA,KAAK,EAAEH,SAAS,CAACG,KAAV,CAAgBJ,GAAhB,CAAoB,UAAAK,IAAI;AAAA,2BAAI,IAAIZ,IAAJ,CAASY,IAAT,CAAJ;AAAA,mBAAxB;AAHC,iBAAV,CADO;AAAA,eADJ,CAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAWD;;AAED,SAASV,eAAT","sourcesContent":["import { Card, Topic } from '@flashcards/core'\nimport { GetTopicsService } from './GetTopicsService'\nimport { GetTopicsUseCase } from './GetTopicsUseCase'\n\nfunction createGetTopics(service: GetTopicsService): GetTopicsUseCase {\n  return async function (token: string): Promise<Topic[]> {\n    const topics = await service.getTopics(token)\n    return topics.map(\n      topicData =>\n        new Topic({\n          id: topicData.id,\n          name: topicData.name,\n          cards: topicData.cards.map(card => new Card(card)),\n        }),\n    )\n  }\n}\n\nexport { createGetTopics }\n"]},"metadata":{},"sourceType":"module"}