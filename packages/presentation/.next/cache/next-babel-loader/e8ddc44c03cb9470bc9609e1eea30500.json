{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nclass FirebaseService {\n  constructor(options) {\n    _defineProperty(this, \"firebase\", void 0);\n\n    if (firebase.apps.length === 0) {\n      firebase.initializeApp(options);\n    }\n  }\n\n  getUserToken() {\n    const firebaseUser = firebase.auth().currentUser;\n\n    if (!firebaseUser) {\n      return Promise.resolve(null);\n    }\n\n    return firebaseUser.getIdToken(true);\n  }\n\n  async getCurrentUser() {\n    var _firebaseUser$email, _firebaseUser$emailVe, _firebaseUser$display, _firebaseUser$photoUR;\n\n    const firebaseUser = firebase.auth().currentUser;\n\n    if (!firebaseUser) {\n      return null;\n    }\n\n    return {\n      email: (_firebaseUser$email = firebaseUser.email) !== null && _firebaseUser$email !== void 0 ? _firebaseUser$email : '',\n      emailVerified: (_firebaseUser$emailVe = firebaseUser.emailVerified) !== null && _firebaseUser$emailVe !== void 0 ? _firebaseUser$emailVe : false,\n      name: (_firebaseUser$display = firebaseUser.displayName) !== null && _firebaseUser$display !== void 0 ? _firebaseUser$display : '',\n      photoUrl: (_firebaseUser$photoUR = firebaseUser.photoURL) !== null && _firebaseUser$photoUR !== void 0 ? _firebaseUser$photoUR : '',\n      uid: firebaseUser.uid\n    };\n  }\n\n  userObserver(callback) {\n    firebase.auth().onAuthStateChanged(async firebaseUser => {\n      var _firebaseUser$email2, _firebaseUser$emailVe2, _firebaseUser$display2, _firebaseUser$photoUR2;\n\n      if (!firebaseUser) {\n        return callback(null);\n      }\n\n      callback({\n        email: (_firebaseUser$email2 = firebaseUser.email) !== null && _firebaseUser$email2 !== void 0 ? _firebaseUser$email2 : '',\n        emailVerified: (_firebaseUser$emailVe2 = firebaseUser.emailVerified) !== null && _firebaseUser$emailVe2 !== void 0 ? _firebaseUser$emailVe2 : false,\n        name: (_firebaseUser$display2 = firebaseUser.displayName) !== null && _firebaseUser$display2 !== void 0 ? _firebaseUser$display2 : '',\n        photoUrl: (_firebaseUser$photoUR2 = firebaseUser.photoURL) !== null && _firebaseUser$photoUR2 !== void 0 ? _firebaseUser$photoUR2 : '',\n        uid: firebaseUser.uid\n      });\n    });\n  }\n\n}\n\nexport { FirebaseService };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/node_modules/@flashcards/client/src/service/firebase/service.ts"],"names":["firebase","FirebaseService","constructor","options","apps","length","initializeApp","getUserToken","firebaseUser","auth","currentUser","Promise","resolve","getIdToken","getCurrentUser","email","emailVerified","name","displayName","photoUrl","photoURL","uid","userObserver","callback","onAuthStateChanged"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;;AAIA,MAAMC,eAAN,CAA6C;AAG3CC,EAAAA,WAAW,CAACC,OAAD,EAAmB;AAAA;;AAC5B,QAAIH,QAAQ,CAACI,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BL,MAAAA,QAAQ,CAACM,aAAT,CAAuBH,OAAvB;AACD;AACF;;AAEDI,EAAAA,YAAY,GAAoB;AAC9B,UAAMC,YAAY,GAAGR,QAAQ,CAACS,IAAT,GAAgBC,WAArC;;AAEA,QAAI,CAACF,YAAL,EAAmB;AACjB,aAAOG,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;;AAED,WAAOJ,YAAY,CAACK,UAAb,CAAwB,IAAxB,CAAP;AACD;;AAED,QAAMC,cAAN,GAA0C;AAAA;;AACxC,UAAMN,YAAY,GAAGR,QAAQ,CAACS,IAAT,GAAgBC,WAArC;;AAEA,QAAI,CAACF,YAAL,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,WAAO;AACLO,MAAAA,KAAK,yBAAEP,YAAY,CAACO,KAAf,qEAAwB,EADxB;AAELC,MAAAA,aAAa,2BAAER,YAAY,CAACQ,aAAf,yEAAgC,KAFxC;AAGLC,MAAAA,IAAI,2BAAET,YAAY,CAACU,WAAf,yEAA8B,EAH7B;AAILC,MAAAA,QAAQ,2BAAEX,YAAY,CAACY,QAAf,yEAA2B,EAJ9B;AAKLC,MAAAA,GAAG,EAAEb,YAAY,CAACa;AALb,KAAP;AAOD;;AAEDC,EAAAA,YAAY,CAACC,QAAD,EAA2C;AACrDvB,IAAAA,QAAQ,CAACS,IAAT,GAAgBe,kBAAhB,CAAmC,MAAMhB,YAAN,IAAsB;AAAA;;AACvD,UAAI,CAACA,YAAL,EAAmB;AACjB,eAAOe,QAAQ,CAAC,IAAD,CAAf;AACD;;AAEDA,MAAAA,QAAQ,CAAC;AACPR,QAAAA,KAAK,0BAAEP,YAAY,CAACO,KAAf,uEAAwB,EADtB;AAEPC,QAAAA,aAAa,4BAAER,YAAY,CAACQ,aAAf,2EAAgC,KAFtC;AAGPC,QAAAA,IAAI,4BAAET,YAAY,CAACU,WAAf,2EAA8B,EAH3B;AAIPC,QAAAA,QAAQ,4BAAEX,YAAY,CAACY,QAAf,2EAA2B,EAJ5B;AAKPC,QAAAA,GAAG,EAAEb,YAAY,CAACa;AALX,OAAD,CAAR;AAOD,KAZD;AAaD;;AAjD0C;;AAoD7C,SAASpB,eAAT","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { UserData } from '../../usecase/protocols'\nimport { AuthService } from '../AuthService'\n\nclass FirebaseService implements AuthService {\n  private readonly firebase: firebase.app.App\n\n  constructor(options: unknown) {\n    if (firebase.apps.length === 0) {\n      firebase.initializeApp(options)\n    }\n  }\n\n  getUserToken(): Promise<string> {\n    const firebaseUser = firebase.auth().currentUser\n\n    if (!firebaseUser) {\n      return Promise.resolve(null)\n    }\n\n    return firebaseUser.getIdToken(true)\n  }\n\n  async getCurrentUser(): Promise<UserData> {\n    const firebaseUser = firebase.auth().currentUser\n\n    if (!firebaseUser) {\n      return null\n    }\n\n    return {\n      email: firebaseUser.email ?? '',\n      emailVerified: firebaseUser.emailVerified ?? false,\n      name: firebaseUser.displayName ?? '',\n      photoUrl: firebaseUser.photoURL ?? '',\n      uid: firebaseUser.uid,\n    }\n  }\n\n  userObserver(callback: (user: UserData) => void): void {\n    firebase.auth().onAuthStateChanged(async firebaseUser => {\n      if (!firebaseUser) {\n        return callback(null)\n      }\n\n      callback({\n        email: firebaseUser.email ?? '',\n        emailVerified: firebaseUser.emailVerified ?? false,\n        name: firebaseUser.displayName ?? '',\n        photoUrl: firebaseUser.photoURL ?? '',\n        uid: firebaseUser.uid,\n      })\n    })\n  }\n}\n\nexport { FirebaseService }\n"]},"metadata":{},"sourceType":"module"}