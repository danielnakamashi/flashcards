{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/components/Flashcard/Flashcard.tsx\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport cn from 'classnames';\nimport { useStyles } from './Flashcard.style';\n\nconst Flashcard = ({\n  front,\n  children,\n  onRemove,\n  containerClassName\n}) => {\n  const classes = useStyles();\n  const [isFlipped, setIsFlipped] = React.useState(false);\n  const hasRemoveHandler = typeof onRemove === 'function';\n  React.useEffect(() => {\n    setIsFlipped(false);\n  }, [front, children]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    elevation: 3,\n    className: cn(classes.flipperContainer, containerClassName, {\n      flipped: isFlipped\n    }),\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      className: classes.actionArea,\n      onClick: () => setIsFlipped(state => !state),\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.flipper,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"primary\",\n          variant: \"h3\",\n          component: \"h3\",\n          className: classes.front,\n          children: front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.flipper,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"secondary\",\n          variant: \"h4\",\n          component: \"h4\",\n          className: classes.back,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), hasRemoveHandler && /*#__PURE__*/_jsxDEV(Fab, {\n      className: classes.fab,\n      size: \"medium\",\n      title: \"remove\",\n      onClick: onRemove,\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport { Flashcard };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/components/Flashcard/Flashcard.tsx"],"names":["React","Card","CardActionArea","CardContent","Typography","Fab","DeleteIcon","cn","useStyles","Flashcard","front","children","onRemove","containerClassName","classes","isFlipped","setIsFlipped","useState","hasRemoveHandler","useEffect","flipperContainer","flipped","actionArea","state","flipper","back","fab"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AASA,MAAMC,SAA0B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAD,KAAuD;AACxF,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BhB,KAAK,CAACiB,QAAN,CAAe,KAAf,CAAlC;AACA,QAAMC,gBAAgB,GAAG,OAAON,QAAP,KAAoB,UAA7C;AAEAZ,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD,EAEG,CAACN,KAAD,EAAQC,QAAR,CAFH;AAIA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,SAAS,EAAEJ,EAAE,CAACO,OAAO,CAACM,gBAAT,EAA2BP,kBAA3B,EAA+C;AAAEQ,MAAAA,OAAO,EAAEN;AAAX,KAA/C,CAFf;AAAA,4BAIE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAED,OAAO,CAACQ,UAAnC;AAA+C,MAAA,OAAO,EAAE,MAAMN,YAAY,CAACO,KAAK,IAAI,CAACA,KAAX,CAA1E;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAET,OAAO,CAACU,OAAhC;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,SAAlB;AAA4B,UAAA,OAAO,EAAC,IAApC;AAAyC,UAAA,SAAS,EAAC,IAAnD;AAAwD,UAAA,SAAS,EAAEV,OAAO,CAACJ,KAA3E;AAAA,oBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEI,OAAO,CAACU,OAAhC;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,WAAlB;AAA8B,UAAA,OAAO,EAAC,IAAtC;AAA2C,UAAA,SAAS,EAAC,IAArD;AAA0D,UAAA,SAAS,EAAEV,OAAO,CAACW,IAA7E;AAAA,oBACGd;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAgBGO,gBAAgB,iBACf,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACY,GAAxB;AAA6B,MAAA,IAAI,EAAC,QAAlC;AAA2C,MAAA,KAAK,EAAC,QAAjD;AAA0D,MAAA,OAAO,EAAEd,QAAnE;AAAA,6BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAjCD;;AAmCA,SAASH,SAAT","sourcesContent":["import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Fab from '@material-ui/core/Fab'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport cn from 'classnames'\nimport { useStyles } from './Flashcard.style'\n\ntype Props = {\n  front: string\n  children: React.ReactNode\n  onRemove?: () => void\n  containerClassName?: string\n}\n\nconst Flashcard: React.FC<Props> = ({ front, children, onRemove, containerClassName }) => {\n  const classes = useStyles()\n  const [isFlipped, setIsFlipped] = React.useState(false)\n  const hasRemoveHandler = typeof onRemove === 'function'\n\n  React.useEffect(() => {\n    setIsFlipped(false)\n  }, [front, children])\n\n  return (\n    <Card\n      elevation={3}\n      className={cn(classes.flipperContainer, containerClassName, { flipped: isFlipped })}\n    >\n      <CardActionArea className={classes.actionArea} onClick={() => setIsFlipped(state => !state)}>\n        <CardContent className={classes.flipper}>\n          <Typography color=\"primary\" variant=\"h3\" component=\"h3\" className={classes.front}>\n            {front}\n          </Typography>\n        </CardContent>\n        <CardContent className={classes.flipper}>\n          <Typography color=\"secondary\" variant=\"h4\" component=\"h4\" className={classes.back}>\n            {children}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      {hasRemoveHandler && (\n        <Fab className={classes.fab} size=\"medium\" title=\"remove\" onClick={onRemove}>\n          <DeleteIcon />\n        </Fab>\n      )}\n    </Card>\n  )\n}\n\nexport { Flashcard }\n"]},"metadata":{},"sourceType":"module"}