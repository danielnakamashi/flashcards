{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Topic } from '@flashcards/core';\n\nfunction createAddTopicUseCase(service) {\n  return async function (token, data) {\n    const topicData = await service.addTopic(token, data);\n    return new Topic(_objectSpread(_objectSpread({}, topicData), {}, {\n      cards: topicData.cards\n    }));\n  };\n}\n\nexport { createAddTopicUseCase };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/node_modules/@flashcards/client/src/usecase/AddTopic/createAddTopic.ts"],"names":["Topic","createAddTopicUseCase","service","token","data","topicData","addTopic","cards"],"mappings":";;;;;;AAAA,SAAeA,KAAf,QAA4B,kBAA5B;;AAIA,SAASC,qBAAT,CAA+BC,OAA/B,EAA0E;AACxE,SAAO,gBAAgBC,KAAhB,EAAuBC,IAAvB,EAA6B;AAClC,UAAMC,SAAS,GAAG,MAAMH,OAAO,CAACI,QAAR,CAAiBH,KAAjB,EAAwBC,IAAxB,CAAxB;AAEA,WAAO,IAAIJ,KAAJ,iCACFK,SADE;AAELE,MAAAA,KAAK,EAAEF,SAAS,CAACE;AAFZ,OAAP;AAID,GAPD;AAQD;;AAED,SAASN,qBAAT","sourcesContent":["import { Card, Topic } from '@flashcards/core'\nimport { AddTopicService } from './AddTopicService'\nimport { AddTopicUseCase } from './AddTopicUseCase'\n\nfunction createAddTopicUseCase(service: AddTopicService): AddTopicUseCase {\n  return async function (token, data) {\n    const topicData = await service.addTopic(token, data)\n\n    return new Topic({\n      ...topicData,\n      cards: topicData.cards,\n    })\n  }\n}\n\nexport { createAddTopicUseCase }\n"]},"metadata":{},"sourceType":"module"}