{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/topic/[topicId]/study/Study.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { Pages } from '@/models';\nimport { withAuth } from '@/hocs/withAuth';\nimport { withRedirectToLogin } from '@/hocs/withRedirectToLogin';\nimport { useTopic } from '@/hooks/useTopic';\nimport { shuffleCards } from '@/main';\nimport { Header } from '@/components/Header';\nimport { StudyPile } from '@/components/StudyPile';\nimport { useStyles } from './Study.style';\n\nvar Study = function Study() {\n  _s();\n\n  var styles = useStyles();\n  var router = useRouter();\n  var _ref = router.query,\n      topicId = _ref.topicId;\n  var topic = useTopic(topicId);\n\n  var _useState = useState([]),\n      cards = _useState[0],\n      setCards = _useState[1];\n\n  useEffect(function () {\n    var _topic$cards;\n\n    setCards((_topic$cards = topic === null || topic === void 0 ? void 0 : topic.cards) !== null && _topic$cards !== void 0 ? _topic$cards : []);\n  }, [topic]);\n\n  if (!topic) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      pt: 2,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        component: \"main\",\n        \"data-testid\": \"topic-study-page\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          className: styles.title,\n          align: \"center\",\n          children: topic.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(StudyPile, {\n          cards: cards,\n          onShuffle: function onShuffle() {\n            shuffleCards(cards).then(function (shuffledCards) {\n              setCards(shuffledCards);\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Study, \"43tvVLnPfZMJw07assRsQLrZJpU=\", false, function () {\n  return [useStyles, useRouter, useTopic];\n});\n\n_c = Study;\nStudy.displayName = Pages.TopicStudy;\nvar StudyDecorated = withAuth(_c2 = withRedirectToLogin(Study));\n_c3 = StudyDecorated;\nexport { StudyDecorated as default };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Study\");\n$RefreshReg$(_c2, \"StudyDecorated$withAuth\");\n$RefreshReg$(_c3, \"StudyDecorated\");","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/topic/[topicId]/study/Study.tsx"],"names":["useState","useEffect","useRouter","Box","Container","Typography","Pages","withAuth","withRedirectToLogin","useTopic","shuffleCards","Header","StudyPile","useStyles","Study","styles","router","query","topicId","topic","cards","setCards","title","name","then","shuffledCards","displayName","TopicStudy","StudyDecorated","default"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SAASC,SAAT,QAA0B,eAA1B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,MAAMG,MAAM,GAAGd,SAAS,EAAxB;AAFkB,aAGEc,MAAM,CAACC,KAHT;AAAA,MAGVC,OAHU,QAGVA,OAHU;AAIlB,MAAMC,KAAK,GAAGV,QAAQ,CAACS,OAAD,CAAtB;;AAJkB,kBAKQlB,QAAQ,CAAa,EAAb,CALhB;AAAA,MAKXoB,KALW;AAAA,MAKJC,QALI;;AAOlBpB,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACdoB,IAAAA,QAAQ,iBAACF,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEC,KAAR,uDAAiB,EAAjB,CAAR;AACD,GAFQ,EAEN,CAACD,KAAD,CAFM,CAAT;;AAIA,MAAI,CAACA,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,MAAnC;AAA0C,uBAAY,kBAAtD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAEJ,MAAM,CAACO,KAA3C;AAAkD,UAAA,KAAK,EAAC,QAAxD;AAAA,oBACGH,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE,QAAC,SAAD;AACE,UAAA,KAAK,EAAEH,KADT;AAEE,UAAA,SAAS,EAAE,qBAAM;AACfV,YAAAA,YAAY,CAACU,KAAD,CAAZ,CAAoBI,IAApB,CAAyB,UAAAC,aAAa,EAAI;AACxCJ,cAAAA,QAAQ,CAACI,aAAD,CAAR;AACD,aAFD;AAGD;AANH;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAoBD,CAnCD;;GAAMX,K;UACWD,S,EACAX,S,EAEDO,Q;;;KAJVK,K;AAqCNA,KAAK,CAACY,WAAN,GAAoBpB,KAAK,CAACqB,UAA1B;AAEA,IAAMC,cAAc,GAAGrB,QAAQ,OAACC,mBAAmB,CAACM,KAAD,CAApB,CAA/B;MAAMc,c;AAEN,SAASA,cAAc,IAAIC,OAA3B","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport { Pages } from '@/models'\nimport { withAuth } from '@/hocs/withAuth'\nimport { withRedirectToLogin } from '@/hocs/withRedirectToLogin'\nimport { useTopic } from '@/hooks/useTopic'\nimport { shuffleCards } from '@/main'\nimport { Header } from '@/components/Header'\nimport { StudyPile } from '@/components/StudyPile'\nimport { CardData } from '@flashcards/usecase'\nimport { useStyles } from './Study.style'\n\nconst Study = () => {\n  const styles = useStyles()\n  const router = useRouter()\n  const { topicId } = router.query as { topicId: string }\n  const topic = useTopic(topicId)\n  const [cards, setCards] = useState<CardData[]>([])\n\n  useEffect(() => {\n    setCards(topic?.cards ?? [])\n  }, [topic])\n\n  if (!topic) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <>\n      <Header />\n      <Box pt={2}>\n        <Container maxWidth=\"md\" component=\"main\" data-testid=\"topic-study-page\">\n          <Typography variant=\"h1\" className={styles.title} align=\"center\">\n            {topic.name}\n          </Typography>\n          <StudyPile\n            cards={cards}\n            onShuffle={() => {\n              shuffleCards(cards).then(shuffledCards => {\n                setCards(shuffledCards)\n              })\n            }}\n          />\n        </Container>\n      </Box>\n    </>\n  )\n}\n\nStudy.displayName = Pages.TopicStudy\n\nconst StudyDecorated = withAuth(withRedirectToLogin(Study))\n\nexport { StudyDecorated as default }\n"]},"metadata":{},"sourceType":"module"}