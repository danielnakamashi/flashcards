{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/topic/[topicId]/Topic.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withAuth } from '@/hocs/withAuth';\nimport { withRedirectToLogin } from '@/hocs/withRedirectToLogin';\nimport { Pages } from '@/models';\nimport { Header } from '@/components/Header';\nimport { useToken } from '@/hooks/useToken';\nimport { addCard } from '@/main';\nimport { Flashcard } from '@/components/Flashcard';\nimport { NewCardForm } from '@/components/NewCardForm';\nimport { useTopic } from '@/hooks/useTopic';\nimport { useStyles } from './Topic.style';\n\nvar Topic = function Topic() {\n  _s();\n\n  var router = useRouter();\n  var styles = useStyles();\n  var token = useToken();\n  var _ref = router.query,\n      topicId = _ref.topicId;\n  var topic = useTopic(topicId);\n  console.log(token);\n\n  if (!topic) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"main\", {\n      \"data-testid\": \"topic-page\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 2,\n        className: styles.list,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            className: styles.title,\n            children: topic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(NewCardForm, {\n            onAdd: /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(question, answer) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return addCard(token, {\n                          topicId: topicId,\n                          question: question,\n                          answer: answer\n                        });\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            spacing: 2,\n            children: topic.cards.map(function (card) {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Flashcard, {\n                  front: card.front,\n                  containerClassName: styles.flashCard,\n                  children: card.back\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, _this)\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Topic, \"RkiXj/WLR6HQRoaPd9X2F6UBnUA=\", false, function () {\n  return [useRouter, useStyles, useToken, useTopic];\n});\n\n_c = Topic;\nTopic.displayName = Pages.Topic;\nvar TopicDecorated = withAuth(_c2 = withRedirectToLogin(Topic));\n_c3 = TopicDecorated;\nexport { TopicDecorated as default };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Topic\");\n$RefreshReg$(_c2, \"TopicDecorated$withAuth\");\n$RefreshReg$(_c3, \"TopicDecorated\");","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/pages/topic/[topicId]/Topic.tsx"],"names":["useRouter","Grid","Typography","withAuth","withRedirectToLogin","Pages","Header","useToken","addCard","Flashcard","NewCardForm","useTopic","useStyles","Topic","router","styles","token","query","topicId","topic","console","log","list","title","name","question","answer","cards","map","card","front","flashCard","back","id","displayName","TopicDecorated","default"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { withAuth } from '@/hocs/withAuth'\nimport { withRedirectToLogin } from '@/hocs/withRedirectToLogin'\nimport { Pages } from '@/models'\nimport { Header } from '@/components/Header'\nimport { useToken } from '@/hooks/useToken'\nimport { addCard } from '@/main'\nimport { Flashcard } from '@/components/Flashcard'\nimport { NewCardForm } from '@/components/NewCardForm'\nimport { useTopic } from '@/hooks/useTopic'\nimport { useStyles } from './Topic.style'\n\nconst Topic = () => {\n  const router = useRouter()\n  const styles = useStyles()\n  const token = useToken()\n  const { topicId } = router.query as { topicId: string }\n\n  const topic = useTopic(topicId)\n\n  console.log(token)\n\n  if (!topic) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <>\n      <Header />\n      <main data-testid=\"topic-page\">\n        <Grid container direction=\"column\" spacing={2} className={styles.list}>\n          <Grid item>\n            <Typography variant=\"h1\" className={styles.title}>\n              {topic.name}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <NewCardForm\n              onAdd={async (question, answer) => {\n                await addCard(token, { topicId, question, answer })\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <Grid container direction=\"row\" spacing={2}>\n              {topic.cards.map(card => (\n                <Grid item key={card.id} xs={12} sm={6} md={3}>\n                  <Flashcard front={card.front} containerClassName={styles.flashCard}>\n                    {card.back}\n                  </Flashcard>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </main>\n    </>\n  )\n}\n\nTopic.displayName = Pages.Topic\n\nconst TopicDecorated = withAuth(withRedirectToLogin(Topic))\n\nexport { TopicDecorated as default }\n"]},"metadata":{},"sourceType":"module"}