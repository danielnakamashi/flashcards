{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/components/NewTopicForm/NewTopicForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useStyles } from './NewTopicForm.style';\n\nvar NewTopicForm = function NewTopicForm(_ref) {\n  _s();\n\n  var _errors$name;\n\n  var onTopicAdded = _ref.onTopicAdded;\n  var classes = useStyles();\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      reset = _useForm.reset,\n      formState = _useForm.formState,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return onTopicAdded(values);\n\n            case 2:\n              reset();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"name\",\n      inputRef: register({\n        required: 'Provide a topic name'\n      }),\n      label: \"New Topic\",\n      variant: \"outlined\",\n      fullWidth: true,\n      defaultValue: \"\",\n      type: \"text\",\n      disabled: formState.isSubmitting,\n      helperText: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message,\n      error: Boolean(errors.name),\n      InputLabelProps: {\n        htmlFor: 'name'\n      },\n      InputProps: {\n        inputProps: {\n          id: 'name'\n        },\n        endAdornment: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.addTopicButton,\n          variant: \"contained\",\n          type: \"submit\",\n          \"data-testid\": \"submit-button\",\n          disabled: formState.isSubmitting,\n          children: \"Add topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, _this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NewTopicForm, \"X/Dbtj9xwLt1QjPXzZ39gjjEQHA=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = NewTopicForm;\nexport { NewTopicForm };\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTopicForm\");","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/packages/presentation/components/NewTopicForm/NewTopicForm.tsx"],"names":["React","useForm","Button","TextField","useStyles","NewTopicForm","onTopicAdded","classes","handleSubmit","reset","formState","register","errors","onSubmit","values","required","isSubmitting","name","message","Boolean","htmlFor","inputProps","id","endAdornment","addTopicButton"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAUA,IAAMC,YAAyC,GAAG,SAA5CA,YAA4C,OAAsB;AAAA;;AAAA;;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACtE,MAAMC,OAAO,GAAGH,SAAS,EAAzB;;AADsE,iBAETH,OAAO,EAFE;AAAA,MAE9DO,YAF8D,YAE9DA,YAF8D;AAAA,MAEhDC,KAFgD,YAEhDA,KAFgD;AAAA,MAEzCC,SAFyC,YAEzCA,SAFyC;AAAA,MAE9BC,QAF8B,YAE9BA,QAF8B;AAAA,MAEpBC,MAFoB,YAEpBA,MAFoB;;AAGtE,MAAMC,QAAQ;AAAA,yEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACTR,YAAY,CAACQ,MAAD,CADH;;AAAA;AAEfL,cAAAA,KAAK;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARI,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAKA,sBACE;AAAM,IAAA,QAAQ,EAAEL,YAAY,CAACK,QAAD,CAA5B;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEF,QAAQ,CAAC;AAAEI,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAFpB;AAGE,MAAA,KAAK,EAAC,WAHR;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,SAAS,MALX;AAME,MAAA,YAAY,EAAC,EANf;AAOE,MAAA,IAAI,EAAC,MAPP;AAQE,MAAA,QAAQ,EAAEL,SAAS,CAACM,YARtB;AASE,MAAA,UAAU,kBAAEJ,MAAM,CAACK,IAAT,iDAAE,aAAaC,OAT3B;AAUE,MAAA,KAAK,EAAEC,OAAO,CAACP,MAAM,CAACK,IAAR,CAVhB;AAWE,MAAA,eAAe,EAAE;AACfG,QAAAA,OAAO,EAAE;AADM,OAXnB;AAcE,MAAA,UAAU,EAAE;AACVC,QAAAA,UAAU,EAAE;AACVC,UAAAA,EAAE,EAAE;AADM,SADF;AAIVC,QAAAA,YAAY,eACV,QAAC,MAAD;AACE,UAAA,SAAS,EAAEhB,OAAO,CAACiB,cADrB;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,yBAAY,eAJd;AAKE,UAAA,QAAQ,EAAEd,SAAS,CAACM,YALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALQ;AAdd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAmCD,CA3CD;;GAAMX,Y;UACYD,S,EAC6CH,O;;;KAFzDI,Y;AA6CN,SAASA,YAAT","sourcesContent":["import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport { useStyles } from './NewTopicForm.style'\n\ntype FormFields = {\n  name: string\n}\n\ntype NewTopicFormProps = {\n  onTopicAdded: (topicFields: FormFields) => Promise<void>\n}\n\nconst NewTopicForm: React.FC<NewTopicFormProps> = ({ onTopicAdded }) => {\n  const classes = useStyles()\n  const { handleSubmit, reset, formState, register, errors } = useForm<FormFields>()\n  const onSubmit = async (values: FormFields) => {\n    await onTopicAdded(values)\n    reset()\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <TextField\n        name=\"name\"\n        inputRef={register({ required: 'Provide a topic name' })}\n        label=\"New Topic\"\n        variant=\"outlined\"\n        fullWidth\n        defaultValue=\"\"\n        type=\"text\"\n        disabled={formState.isSubmitting}\n        helperText={errors.name?.message}\n        error={Boolean(errors.name)}\n        InputLabelProps={{\n          htmlFor: 'name',\n        }}\n        InputProps={{\n          inputProps: {\n            id: 'name',\n          },\n          endAdornment: (\n            <Button\n              className={classes.addTopicButton}\n              variant=\"contained\"\n              type=\"submit\"\n              data-testid=\"submit-button\"\n              disabled={formState.isSubmitting}\n            >\n              Add topic\n            </Button>\n          ),\n        }}\n      />\n    </form>\n  )\n}\n\nexport { NewTopicForm }\n"]},"metadata":{},"sourceType":"module"}