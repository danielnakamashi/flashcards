{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { UserData } from '../../usecase/protocols';\nimport { LoginProvidersData } from '../../usecase/protocols/LoginProvidersData';\nimport firebase from './firebase';\n\nfunction getFirebaseProvider(provider) {\n  switch (provider) {\n    case LoginProvidersData.Google:\n      return new firebase.auth.GoogleAuthProvider();\n\n    case LoginProvidersData.Facebook:\n      return new firebase.auth.FacebookAuthProvider();\n  }\n}\n\nvar loginWithProvider = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(provider) {\n    var _user$displayName, _user$email, _user$emailVerified, _user$photoURL;\n\n    var firebaseProvider, _yield$firebase$auth$, user, token;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firebaseProvider = getFirebaseProvider(provider);\n            _context.next = 3;\n            return firebase.auth().signInWithPopup(firebaseProvider);\n\n          case 3:\n            _yield$firebase$auth$ = _context.sent;\n            user = _yield$firebase$auth$.user;\n            _context.next = 7;\n            return user === null || user === void 0 ? void 0 : user.getIdToken(true);\n\n          case 7:\n            token = _context.sent;\n\n            if (!(user === null)) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 10:\n            return _context.abrupt(\"return\", new UserData({\n              name: (_user$displayName = user.displayName) !== null && _user$displayName !== void 0 ? _user$displayName : '',\n              email: (_user$email = user.email) !== null && _user$email !== void 0 ? _user$email : '',\n              emailVerified: (_user$emailVerified = user.emailVerified) !== null && _user$emailVerified !== void 0 ? _user$emailVerified : false,\n              photoUrl: (_user$photoURL = user.photoURL) !== null && _user$photoURL !== void 0 ? _user$photoURL : '',\n              uid: user.uid,\n              token: token\n            }));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginWithProvider(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { loginWithProvider };","map":{"version":3,"sources":["/Users/daniel.nakamashi/Documents/projects/clean-flashcards/node_modules/@flashcards/client/src/service/firebase/loginWithProvider.ts"],"names":["UserData","LoginProvidersData","firebase","getFirebaseProvider","provider","Google","auth","GoogleAuthProvider","Facebook","FacebookAuthProvider","loginWithProvider","firebaseProvider","signInWithPopup","user","getIdToken","token","name","displayName","email","emailVerified","photoUrl","photoURL","uid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,mBAAT,CACEC,QADF,EAE8B;AAC5B,UAAQA,QAAR;AACE,SAAKH,kBAAkB,CAACI,MAAxB;AACE,aAAO,IAAIH,QAAQ,CAACI,IAAT,CAAcC,kBAAlB,EAAP;;AACF,SAAKN,kBAAkB,CAACO,QAAxB;AACE,aAAO,IAAIN,QAAQ,CAACI,IAAT,CAAcG,oBAAlB,EAAP;AAJJ;AAMD;;AAED,IAAMC,iBAA2C;AAAA,sEAAG,iBAClDN,QADkD;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAG5CO,YAAAA,gBAH4C,GAGzBR,mBAAmB,CAACC,QAAD,CAHM;AAAA;AAAA,mBAI3BF,QAAQ,CAACI,IAAT,GAAgBM,eAAhB,CAAgCD,gBAAhC,CAJ2B;;AAAA;AAAA;AAI1CE,YAAAA,IAJ0C,yBAI1CA,IAJ0C;AAAA;AAAA,mBAK9BA,IAL8B,aAK9BA,IAL8B,uBAK9BA,IAAI,CAAEC,UAAN,CAAiB,IAAjB,CAL8B;;AAAA;AAK5CC,YAAAA,KAL4C;;AAAA,kBAO9CF,IAAI,KAAK,IAPqC;AAAA;AAAA;AAAA;;AAAA,6CAQzC,IARyC;;AAAA;AAAA,6CAW3C,IAAIb,QAAJ,CAAa;AAClBgB,cAAAA,IAAI,uBAAEH,IAAI,CAACI,WAAP,iEAAsB,EADR;AAElBC,cAAAA,KAAK,iBAAEL,IAAI,CAACK,KAAP,qDAAgB,EAFH;AAGlBC,cAAAA,aAAa,yBAAEN,IAAI,CAACM,aAAP,qEAAwB,KAHnB;AAIlBC,cAAAA,QAAQ,oBAAEP,IAAI,CAACQ,QAAP,2DAAmB,EAJT;AAKlBC,cAAAA,GAAG,EAAET,IAAI,CAACS,GALQ;AAMlBP,cAAAA,KAAK,EAALA;AANkB,aAAb,CAX2C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAA3CL,iBAA2C;AAAA;AAAA;AAAA,GAAjD;;AAqBA,SAASA,iBAAT","sourcesContent":["import { UserData } from '../../usecase/protocols'\nimport { LoginProvidersData } from '../../usecase/protocols/LoginProvidersData'\nimport { LoginWithProviderService } from '../../usecase/LoginWithProvider'\nimport firebase from './firebase'\n\nfunction getFirebaseProvider(\n  provider: LoginProvidersData,\n): firebase.auth.AuthProvider {\n  switch (provider) {\n    case LoginProvidersData.Google:\n      return new firebase.auth.GoogleAuthProvider()\n    case LoginProvidersData.Facebook:\n      return new firebase.auth.FacebookAuthProvider()\n  }\n}\n\nconst loginWithProvider: LoginWithProviderService = async (\n  provider: LoginProvidersData,\n) => {\n  const firebaseProvider = getFirebaseProvider(provider)\n  const { user } = await firebase.auth().signInWithPopup(firebaseProvider)\n  const token = await user?.getIdToken(true)\n\n  if (user === null) {\n    return null\n  }\n\n  return new UserData({\n    name: user.displayName ?? '',\n    email: user.email ?? '',\n    emailVerified: user.emailVerified ?? false,\n    photoUrl: user.photoURL ?? '',\n    uid: user.uid,\n    token,\n  })\n}\n\nexport { loginWithProvider }\n"]},"metadata":{},"sourceType":"module"}